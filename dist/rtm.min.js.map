{"version":3,"sources":["webpack://Rtm/webpack/bootstrap","webpack://Rtm/./src/fpnn/FPEvent.js","webpack://Rtm/./src/fpnn/FPConfig.js","webpack://Rtm/./src/rtm/RTMConfig.js","webpack://Rtm/(webpack)/buildin/global.js","webpack://Rtm/./node_modules/ieee754/index.js","webpack://Rtm/./node_modules/base64-js/index.js","webpack://Rtm/./node_modules/node-libs-browser/node_modules/buffer/index.js","webpack://Rtm/(webpack)/buildin/amd-options.js","webpack://Rtm/./node_modules/process/browser.js","webpack://Rtm/./libs/md5.min.js","webpack://Rtm/./src/rtm/RTMProxy.js","webpack://Rtm/./src/rtm/RTMProcessor.js","webpack://Rtm/./libs/msgpack.min.js","webpack://Rtm/./libs/int64-buffer.min.js","webpack://Rtm/./src/fpnn/FPProcessor.js","webpack://Rtm/./src/fpnn/FPCallback.js","webpack://Rtm/./src/fpnn/FPPackage.js","webpack://Rtm/./src/fpnn/platform/BrowserImpl.js","webpack://Rtm/./src/fpnn/FPSocket.js","webpack://Rtm/./src/fpnn/FPClient.js","webpack://Rtm/./libs/buffer.js","webpack://Rtm/./node_modules/isarray/index.js","webpack://Rtm/./src/rtm/RTMClient.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","FPEvent","target","Error","events","on","t","cb","indexOf","push","emit","arguments","length","list","args","j","apply","removeEvent","index","splice","listenerCount","Buffer","ERROR_CODE","FPNN_EC_PROTO_UNKNOWN_ERROR","FPNN_EC_PROTO_NOT_SUPPORTED","FPNN_EC_PROTO_INVALID_PACKAGE","FPNN_EC_PROTO_JSON_CONVERT","FPNN_EC_PROTO_STRING_KEY","FPNN_EC_PROTO_MAP_VALUE","FPNN_EC_PROTO_METHOD_TYPE","FPNN_EC_PROTO_PROTO_TYPE","FPNN_EC_PROTO_KEY_NOT_FOUND","FPNN_EC_PROTO_TYPE_CONVERT","FPNN_EC_CORE_UNKNOWN_ERROR","FPNN_EC_CORE_CONNECTION_CLOSED","FPNN_EC_CORE_TIMEOUT","FPNN_EC_CORE_UNKNOWN_METHOD","FPNN_EC_CORE_ENCODING","FPNN_EC_CORE_DECODING","FPNN_EC_CORE_SEND_ERROR","FPNN_EC_CORE_RECV_ERROR","FPNN_EC_CORE_INVALID_PACKAGE","FPNN_EC_CORE_HTTP_ERROR","FPNN_EC_CORE_WORK_QUEUE_FULL","FPNN_EC_CORE_INVALID_CONNECTION","FPNN_EC_CORE_FORBIDDEN","FPNN_EC_CORE_SERVER_STOPPING","FPNN_VERSION","from","FP_FLAG","FP_MESSAGE_TYPE","TCP_MAGIC","HTTP_MAGIC","CRYPTO_CURVES","CRYPTO_ALGORITHM","FPConfig","Int64BE","Pack","FILE_TYPE","image","audio","video","file","SERVER_PUSH","kickOut","kickOutRoom","recvMessage","recvGroupMessage","recvRoomMessage","recvBroadcastMessage","recvFile","recvGroupFile","recvRoomFile","recvBroadcastFile","recvPing","RTMConfig","g","this","Function","eval","e","window","read","buffer","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","Infinity","Math","pow","write","rt","abs","isNaN","floor","log","LN2","byteLength","b64","placeHoldersCount","toByteArray","tmp","placeHolders","arr","len","Arr","L","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","output","parts","len2","encodeChunk","lookup","join","Uint8Array","Array","code","start","end","num","global","base64","ieee754","isArray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","TypeError","ArrayBuffer","array","byteOffset","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","slice","fromString","obj","isBuffer","checked","copy","val","type","data","fromObject","assertSize","size","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","b","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","buf","readUInt16BE","foundIndex","found","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","utf8Slice","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","match","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","leadSurrogate","trim","replace","stringtrim","base64clean","src","dst","__webpack_amd_options__","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","version","versions","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","__WEBPACK_AMD_DEFINE_RESULT__","blocks","buffer8","Uint32Array","h0","h1","h2","h3","hBytes","finalized","hashed","first","JS_MD5_NO_WINDOW","self","h","JS_MD5_NO_NODE_JS","node","f","JS_MD5_NO_COMMON_JS","JS_MD5_NO_ARRAY_BUFFER","split","u","A","JS_MD5_NO_ARRAY_BUFFER_IS_VIEW","constructor","update","v","w","create","createHash","digest","lastByteIndex","hash","finalize","hex","arrayBuffer","_","md5","RTMProxy","endpoint","_classCallCheck","_endpoint","_targetEndpoint","MsgPack","encode","RTMProcessor","assign","_map","_msgOptions","codec","createCodec","int64","setInterval","key","Date","now","delayRemove","MID_TTL","callCb","method","flag","JSON","stringify","payload","parse","decode","rid","Int64","mid","checkMid","mtime","mtype","ftype","gid","uid","rgid","require","1","Encoder","Decoder","./codec","./decode","./decoder","./encode","./encoder","./ext","2","3","4","isArrayBuffer","./bufferish","5","hasBuffer","6","./buffer-lite","7","hasArrayBuffer","8","E","forEach","./buffer-global","./bufferish-array","./bufferish-buffer","./bufferish-proto","./bufferish-uint8array","isarray","9","options","init","install","filter","reduce","uint8array","bufferish","preset","10","./codec-base","./read-core","./write-core","11","DecodeBuffer","FlexDecoder","mixin","fetch","./flex-buffer","12","./decode-buffer","13","flush","event-lite","14","EncodeBuffer","FlexEncoder","15","./encode-buffer","16","17","ExtBuffer","18","valueOf","RegExp","shift","pop","unshift","setExtPackers","addExtPacker","EvalError","ReferenceError","SyntaxError","URIError","Boolean","Int8Array","Int16Array","Uint16Array","Int32Array","Float32Array","Float64Array","Uint8ClampedArray","DataView","message","stack","columnNumber","fileName","lineNumber","19","setExtUnpackers","addExtUnpacker","20","21","buffers","pull","reserve","maxBufferSize","minBufferSize","send","22","getReadToken","readUint8","extUnpackers","getExtUnpacker","./ext-buffer","./ext-unpacker","./read-format","./read-token","23","Map","k","S","P","toNumber","R","B","U","Uint64BE","getReadFormat","binarraybuffer","map","T","usemap","bin","uint16","uint32","uint64","int8","int16","int32","float32","float64","int64-buffer","24","useraw","25","getWriteType","extPackers","extEncoderList","getExtPacker","./ext-packer","./write-type","26","getWriteToken","safe","./write-uint8","27","I","Y","isUint64BE","toArray","isInt64BE","D","keys","boolean","function","number","symbol","./write-token","28","29","H","Q","q","X","G","W","J","Z","$","V","C","O","M","N","K","F","z","tt","base64-js","30","31","originalListener","32","33","toBuffer","toArrayBuffer","nodeName","34","FPProcessor","FPCallback","_cbMap","_exMap","delayExec","CHECK_CBS_INTERVAL","SEND_TIMEOUT","cbRemove","FPPackage","magic","ss","seq","psize","BUFFER","wpos","isTwoWay","isOneWay","isMsgPack","isJson","enCodeOneway","enCodeTwoway","isAnswer","enCodeAnswer","buildHeader","mbuf","pbuf","peek","peekHead","deCodeOneWay","deCodeTwoWay","deCodeAnswer","isHTTP","isTCP","BrowserImpl","_socket","WebSocket","err","binaryType","onopen","evt","onmessage","onclose","onerror","close","readyState","OPEN","CONNECTING","PlatFormImpl","FPSocket","_timeout","connectionTimeout","_platform","platformImpl","_connectTimeout","_queue","writeSocket","chunk","onClose","onError","isConnecting","isOpen","open","FPClient","_autoReconnect","autoReconnect","_proxy","proxy","targetEndpoint","_conn","_reconnectID","_wpos","_buffer","resizeBuffer","READ_BUFFER_LEN","_readID","_peekData","_pkg","pkgLen","conn","diff","deCode","cbkey","cbKey","_cbs","execCb","isQuest","_psr","service","exception","sendQuest","_seq","hasConnect","callback","buildPkgData","addCb","enCode","buildProxyData","destroy","clearInterval","removeCb","connect","len1","K_MAX_LENGTH","isInstance","numberIsNaN","toPrimitive","mustMatch","console","error","writable","toLocaleString","copyWithin","RTMClient","_dispatch","dispatch","_pid","pid","_uid","_token","token","_version","_attrs","attrs","_ssl","ssl","_connectionTimeout","_proxyEndpoint","proxyEndpoint","_midSeq","_saltSeq","_ipv6","_baseClient","_dispatchClient","_loginOptions","_reconnectTimeout","_isClose","_processor","buildEndpoint","_fileProxy","ipv6","processor","ok","gate","what","addrType","login","to","msg","genMid","p2p","group","desc","begin","lastid","msgs","item","id","deleted","ouid","direction","cmd","tos","filetoken","apptype","devicetoken","targetLanguage","lang","originalMessage","originalLanguage","text","friends","uids","buids","gids","bgids","rids","brids","xid","ce","ops","fileSendProcess","reader","FileReader","onload","content","result","sign","cyrMD5","fileClient","readAsArrayBuffer","isException","isAnswerErr","ex","client","protol","reconnect"],"mappings":"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","file":"rtm.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","'use strict'\n\nclass FPEvent {\n\n    static assign(target) {\n\n        if (!target || target.hasOwnProperty('events')) {\n\n            throw new Error(target + ' is null or hasOwnProperty [ events ]');\n        }\n\n        if (target.hasOwnProperty('on') || target.hasOwnProperty('emit') || target.hasOwnProperty('removeEvent')) {\n\n            throw new Error(target + ' hasOwnProperty [ on | emit | removeEvent | listenerCount]');\n        }\n\n        target.events = {};\n\n        target.on = function(t, cb) {\n\n            if (!target.events.hasOwnProperty(t)) {\n                \n                target.events[t] = [];\n            }\n    \n            if (target.events[t].indexOf(cb) == -1) {\n\n                target.events[t].push(cb);\n            }\n        };\n\n        target.emit = function() {\n\n            if (arguments.length == 0) {\n\n                return;\n            }\n\n            let list = target.events[arguments[0]] || [];\n\n            for (let i = 0; i < list.length; i++) {\n\n                let cb = list[i];\n                \n                if (cb) {\n\n                    let args = [];\n\n                    for (let j = 1; j < arguments.length; j++) {\n\n                        args[j - 1] = arguments[j];\n                    }\n\n                    cb.apply(target, args);\n                }\n            }\n        };\n\n        target.removeEvent = function() {\n\n            if (arguments.length == 0) {\n\n                target.events = {};\n                return;\n            }\n\n            if (arguments.length == 1) {\n\n                let t = arguments[0];\n\n                if (target.events.hasOwnProperty(t)) {\n\n                    delete target.events[t];\n                }\n\n                return;\n            }\n\n            let t = arguments[0];\n            let index = target.events[t].indexOf(arguments[1]);\n\n            if (index > -1) {\n\n                target.events[t].splice(index, 1);\n            }\n        };\n\n        target.listenerCount = function(t) {\n            \n            if (target.events.hasOwnProperty(t)) {\n\n                let list = target.events[t] || [];\n                return list.length;\n            }\n\n            return 0;\n        };\n    }\n}\n\nmodule.exports = FPEvent;","'use strict'\n\nconst Buffer = require('../../libs/buffer').Buffer;\n\nconst ERROR_CODE = {\n\tFPNN_EC_PROTO_UNKNOWN_ERROR: 10001,\t\t// 未知错误（协议解析错误）\n\tFPNN_EC_PROTO_NOT_SUPPORTED: 10002,\t\t// 不支持的协议\n\tFPNN_EC_PROTO_INVALID_PACKAGE: 10003,\t// 无效的数据包\n\tFPNN_EC_PROTO_JSON_CONVERT: 10004,\t\t// JSON转换错误\n\tFPNN_EC_PROTO_STRING_KEY: 10005,\t\t// 数据包错误\n\tFPNN_EC_PROTO_MAP_VALUE: 10006,\t\t\t// 数据包错误\n\tFPNN_EC_PROTO_METHOD_TYPE: 10007,\t\t// 请求错误\n\tFPNN_EC_PROTO_PROTO_TYPE: 10008,\t\t// 协议类型错误\n\tFPNN_EC_PROTO_KEY_NOT_FOUND: 10009,\t\t// 数据包错误\n\tFPNN_EC_PROTO_TYPE_CONVERT: 10010,\t\t// 数据包转换错误\n\t\t\t\n\tFPNN_EC_CORE_UNKNOWN_ERROR: 20001,\t\t// 未知错误（业务流程异常中断）\n\tFPNN_EC_CORE_CONNECTION_CLOSED: 20002,\t// 链接已关闭\n\tFPNN_EC_CORE_TIMEOUT: 20003,\t\t\t// 请求超时\n\tFPNN_EC_CORE_UNKNOWN_METHOD: 20004,\t\t// 错误的请求\n\tFPNN_EC_CORE_ENCODING: 20005,\t\t\t// 编码错误\n\tFPNN_EC_CORE_DECODING: 20006,\t\t\t// 解码错误\n\tFPNN_EC_CORE_SEND_ERROR: 20007,\t\t\t// 发送错误\n\tFPNN_EC_CORE_RECV_ERROR: 20008,\t\t\t// 接收错误\n\tFPNN_EC_CORE_INVALID_PACKAGE: 20009,\t// 无效的数据包\n\tFPNN_EC_CORE_HTTP_ERROR: 20010,\t\t\t// HTTP错误\n\tFPNN_EC_CORE_WORK_QUEUE_FULL: 20011,\t// 任务队列满\n\tFPNN_EC_CORE_INVALID_CONNECTION: 20012,\t// 无效的链接\n\tFPNN_EC_CORE_FORBIDDEN: 20013,\t\t\t// 禁止操作\n\tFPNN_EC_CORE_SERVER_STOPPING: 20014\t\t// 服务器即将停止\n};\n\nconst FPNN_VERSION = Buffer.from([0x0, 0x1]);\n\nconst FP_FLAG = Buffer.from([\n\t0x40, //FP_FLAG_JSON\n\t0x80  //FP_FLAG_MSGPACK \n]);\n\nconst FP_MESSAGE_TYPE = Buffer.from([\n\t0x0, //FP_MT_ONEWAY\n\t0x1, //FP_MT_TWOWAY\n\t0x2  //FP_MT_ANSWER\n]);\n\nconst TCP_MAGIC = Buffer.from('FPNN');\nconst HTTP_MAGIC = Buffer.from('POST');\n\nconst CRYPTO_CURVES = [\n\t'secp256k1',\n\t'secp224r1'\n];\n\nconst CRYPTO_ALGORITHM = [\n\t'aes-128-cfb',\n\t'aes-256-cfb'\n];\n\nclass FPConfig {\n\n\tstatic get BUFFER() {\n\n\t\treturn Buffer;\n\t}\n\n\tstatic get ERROR_CODE() {\n\n\t\treturn ERROR_CODE;\n\t}\n\n\tstatic get FP_FLAG() {\n\n\t\treturn FP_FLAG;\n\t}\n\n\tstatic get FP_MESSAGE_TYPE() {\n\n\t\treturn FP_MESSAGE_TYPE;\n\t}\n\n\tstatic get TCP_MAGIC() {\n\n\t\treturn TCP_MAGIC;\n\t}\n\n\tstatic get HTTP_MAGIC() {\n\n\t\treturn HTTP_MAGIC;\n\t}\n\n\tstatic get FPNN_VERSION() {\n\n\t\treturn FPNN_VERSION;\n\t}\n\n\tstatic get READ_BUFFER_LEN() {\n\n\t\treturn 1024;\n\t}\n\n\tstatic get CHECK_CBS_INTERVAL() {\n\t\t\n\t\treturn 1000;\n\t}\n\n\tstatic get SEND_TIMEOUT() {\n\n\t\treturn 20 * 1000;\n\t}\n\t\n\tstatic get CRYPTO_CURVES() {\n\n\t\treturn CRYPTO_CURVES;\n\t}\n\n\tstatic get CRYPTO_ALGORITHM() {\n\n\t\treturn CRYPTO_ALGORITHM;\n\t}\n}\n\nmodule.exports = FPConfig;","'use strict'\n\nconst Int64BE = require(\"../../libs/int64-buffer.min\").Int64BE;\nconst Pack = require('../../libs/msgpack.min');\n\nconst ERROR_CODE = {\n\tRTM_EC_INVALID_PROJECT_ID_OR_USER_ID: 200001,\n\tRTM_EC_INVALID_PROJECT_ID_OR_SIGN: 200002,\n\tRTM_EC_INVALID_FILE_OR_SIGN_OR_TOKEN: 200003,\n\tRTM_EC_ATTRS_WITHOUT_SIGN_OR_EXT: 200004,\n\n\tRTM_EC_API_FREQUENCY_LIMITED: 200010,\n\tRTM_EC_MESSAGE_FREQUENCY_LIMITED: 200011,\n\n\tRTM_EC_FORBIDDEN_METHOD: 200020,\n\tRTM_EC_PERMISSION_DENIED: 200021,\n\tRTM_EC_UNAUTHORIZED: 200022,\n\tRTM_EC_DUPLCATED_AUTH: 200023,\n\tRTM_EC_AUTH_DENIED: 200024,\n\tRTM_EC_ADMIN_LOGIN: 200025,\n\tRTM_EC_ADMIN_ONLY: 200026,\n\n\tRTM_EC_LARGE_MESSAGE_OR_ATTRS: 200030,\n\tRTM_EC_LARGE_FILE_OR_ATTRS: 200031,\n\tRTM_EC_TOO_MANY_ITEMS_IN_PARAMETERS: 200032,\n\tRTM_EC_EMPTY_PARAMETER: 200033,\n\n\tRTM_EC_NOT_IN_ROOM: 200040,\n\tRTM_EC_NOT_GROUP_MEMBER: 200041,\n\tRTM_EC_MAX_GROUP_MEMBER_COUNT: 200042,\n\tRTM_EC_NOT_FRIEND: 200043,\n\tRTM_EC_BANNED_IN_GROUP: 200044,\n\tRTM_EC_BANNED_IN_ROOM: 200045,\n\tRTM_EC_EMPTY_GROUP: 200046,\n\tRTM_EC_ENTER_TOO_MANY_ROOMS: 200047,\n\n\tRTM_EC_UNSUPPORTED_LANGUAGE: 200050,\n\tRTM_EC_EMPTY_TRANSLATION: 200051,\n\tRTM_EC_SEND_TO_SELF: 200052,\n\tRTM_EC_DUPLCATED_MID: 200053,\n\tRTM_EC_SENSITIVE_WORDS: 200054,\n\n\tRTM_EC_UNKNOWN_ERROR: 200999\n};\n\nconst FILE_TYPE = {\n\timage: 40, \t\t\t//图片\n\taudio: 41,  \t\t//语音\n\tvideo: 42, \t\t\t//视频\n\tfile: 50 \t\t\t//泛指文件，服务器会修改此值（如果服务器可以判断出具体类型的话，仅在mtype=50的情况下）\n};\n\nconst SERVER_PUSH = {\n\tkickOut: 'kickout',\n\tkickOutRoom: 'kickoutroom',\n\trecvMessage: 'pushmsg',\n\trecvGroupMessage: 'pushgroupmsg',\n\trecvRoomMessage: 'pushroommsg',\n\trecvBroadcastMessage: 'pushbroadcastmsg',\n\trecvFile: 'pushfile',\n\trecvGroupFile: 'pushgroupfile',\n\trecvRoomFile: 'pushroomfile',\n\trecvBroadcastFile: 'pushbroadcastfile',\n\trecvPing: 'ping'\n};\n\nclass RTMConfig {\n\n\tstatic get Int64() {\n\n\t\treturn Int64BE;\n\t}\n\n\tstatic get MsgPack() {\n\n\t\treturn Pack;\n\t}\n\n\tstatic get FILE_TYPE() {\n\n\t\treturn FILE_TYPE;\n\t}\n\n\tstatic get SERVER_PUSH() {\n\t\t\n\t\treturn SERVER_PUSH;\n\t}\n\n\tstatic get MID_TTL() {\n\n\t\treturn 5 * 1000;\n\t}\n}\n\nmodule.exports = RTMConfig;","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = ((uint8[i] << 16) & 0xFF0000) + ((uint8[i + 1] << 8) & 0xFF00) + (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * [js-md5]{@link https://github.com/emn178/js-md5}\n *\n * @namespace md5\n * @version 0.7.3\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n!function(){\"use strict\";function t(t){if(t)d[0]=d[16]=d[1]=d[2]=d[3]=d[4]=d[5]=d[6]=d[7]=d[8]=d[9]=d[10]=d[11]=d[12]=d[13]=d[14]=d[15]=0,this.blocks=d,this.buffer8=l;else if(a){var r=new ArrayBuffer(68);this.buffer8=new Uint8Array(r),this.blocks=new Uint32Array(r)}else this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];this.h0=this.h1=this.h2=this.h3=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1,this.first=!0}var r=\"input is invalid type\",e=\"object\"==typeof window,i=e?window:{};i.JS_MD5_NO_WINDOW&&(e=!1);var s=!e&&\"object\"==typeof self,h=!i.JS_MD5_NO_NODE_JS&&\"object\"==typeof process&&process.versions&&process.versions.node;h?i=global:s&&(i=self);var f=!i.JS_MD5_NO_COMMON_JS&&\"object\"==typeof module&&module.exports,o=\"function\"==typeof define&&define.amd,a=!i.JS_MD5_NO_ARRAY_BUFFER&&\"undefined\"!=typeof ArrayBuffer,n=\"0123456789abcdef\".split(\"\"),u=[128,32768,8388608,-2147483648],y=[0,8,16,24],c=[\"hex\",\"array\",\"digest\",\"buffer\",\"arrayBuffer\",\"base64\"],p=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\"),d=[],l;if(a){var A=new ArrayBuffer(68);l=new Uint8Array(A),d=new Uint32Array(A)}!i.JS_MD5_NO_NODE_JS&&Array.isArray||(Array.isArray=function(t){return\"[object Array]\"===Object.prototype.toString.call(t)}),!a||!i.JS_MD5_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(t){return\"object\"==typeof t&&t.buffer&&t.buffer.constructor===ArrayBuffer});var b=function(r){return function(e){return new t(!0).update(e)[r]()}},v=function(){var r=b(\"hex\");h&&(r=w(r)),r.create=function(){return new t},r.update=function(t){return r.create().update(t)};for(var e=0;e<c.length;++e){var i=c[e];r[i]=b(i)}return r},w=function(t){var e=eval(\"require('crypto')\"),i=eval(\"require('buffer').Buffer\"),s=function(s){if(\"string\"==typeof s)return e.createHash(\"md5\").update(s,\"utf8\").digest(\"hex\");if(null===s||void 0===s)throw r;return s.constructor===ArrayBuffer&&(s=new Uint8Array(s)),Array.isArray(s)||ArrayBuffer.isView(s)||s.constructor===i?e.createHash(\"md5\").update(new i(s)).digest(\"hex\"):t(s)};return s};t.prototype.update=function(t){if(!this.finalized){var e,i=typeof t;if(\"string\"!==i){if(\"object\"!==i)throw r;if(null===t)throw r;if(a&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!(Array.isArray(t)||a&&ArrayBuffer.isView(t)))throw r;e=!0}for(var s,h,f=0,o=t.length,n=this.blocks,u=this.buffer8;f<o;){if(this.hashed&&(this.hashed=!1,n[0]=n[16],n[16]=n[1]=n[2]=n[3]=n[4]=n[5]=n[6]=n[7]=n[8]=n[9]=n[10]=n[11]=n[12]=n[13]=n[14]=n[15]=0),e)if(a)for(h=this.start;f<o&&h<64;++f)u[h++]=t[f];else for(h=this.start;f<o&&h<64;++f)n[h>>2]|=t[f]<<y[3&h++];else if(a)for(h=this.start;f<o&&h<64;++f)(s=t.charCodeAt(f))<128?u[h++]=s:s<2048?(u[h++]=192|s>>6,u[h++]=128|63&s):s<55296||s>=57344?(u[h++]=224|s>>12,u[h++]=128|s>>6&63,u[h++]=128|63&s):(s=65536+((1023&s)<<10|1023&t.charCodeAt(++f)),u[h++]=240|s>>18,u[h++]=128|s>>12&63,u[h++]=128|s>>6&63,u[h++]=128|63&s);else for(h=this.start;f<o&&h<64;++f)(s=t.charCodeAt(f))<128?n[h>>2]|=s<<y[3&h++]:s<2048?(n[h>>2]|=(192|s>>6)<<y[3&h++],n[h>>2]|=(128|63&s)<<y[3&h++]):s<55296||s>=57344?(n[h>>2]|=(224|s>>12)<<y[3&h++],n[h>>2]|=(128|s>>6&63)<<y[3&h++],n[h>>2]|=(128|63&s)<<y[3&h++]):(s=65536+((1023&s)<<10|1023&t.charCodeAt(++f)),n[h>>2]|=(240|s>>18)<<y[3&h++],n[h>>2]|=(128|s>>12&63)<<y[3&h++],n[h>>2]|=(128|s>>6&63)<<y[3&h++],n[h>>2]|=(128|63&s)<<y[3&h++]);this.lastByteIndex=h,this.bytes+=h-this.start,h>=64?(this.start=h-64,this.hash(),this.hashed=!0):this.start=h}return this.bytes>4294967295&&(this.hBytes+=this.bytes/4294967296<<0,this.bytes=this.bytes%4294967296),this}},t.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var t=this.blocks,r=this.lastByteIndex;t[r>>2]|=u[3&r],r>=56&&(this.hashed||this.hash(),t[0]=t[16],t[16]=t[1]=t[2]=t[3]=t[4]=t[5]=t[6]=t[7]=t[8]=t[9]=t[10]=t[11]=t[12]=t[13]=t[14]=t[15]=0),t[14]=this.bytes<<3,t[15]=this.hBytes<<3|this.bytes>>>29,this.hash()}},t.prototype.hash=function(){var t,r,e,i,s,h,f=this.blocks;this.first?r=((r=((t=((t=f[0]-680876937)<<7|t>>>25)-271733879<<0)^(e=((e=(-271733879^(i=((i=(-1732584194^2004318071&t)+f[1]-117830708)<<12|i>>>20)+t<<0)&(-271733879^t))+f[2]-1126478375)<<17|e>>>15)+i<<0)&(i^t))+f[3]-1316259209)<<22|r>>>10)+e<<0:(t=this.h0,r=this.h1,e=this.h2,r=((r+=((t=((t+=((i=this.h3)^r&(e^i))+f[0]-680876936)<<7|t>>>25)+r<<0)^(e=((e+=(r^(i=((i+=(e^t&(r^e))+f[1]-389564586)<<12|i>>>20)+t<<0)&(t^r))+f[2]+606105819)<<17|e>>>15)+i<<0)&(i^t))+f[3]-1044525330)<<22|r>>>10)+e<<0),r=((r+=((t=((t+=(i^r&(e^i))+f[4]-176418897)<<7|t>>>25)+r<<0)^(e=((e+=(r^(i=((i+=(e^t&(r^e))+f[5]+1200080426)<<12|i>>>20)+t<<0)&(t^r))+f[6]-1473231341)<<17|e>>>15)+i<<0)&(i^t))+f[7]-45705983)<<22|r>>>10)+e<<0,r=((r+=((t=((t+=(i^r&(e^i))+f[8]+1770035416)<<7|t>>>25)+r<<0)^(e=((e+=(r^(i=((i+=(e^t&(r^e))+f[9]-1958414417)<<12|i>>>20)+t<<0)&(t^r))+f[10]-42063)<<17|e>>>15)+i<<0)&(i^t))+f[11]-1990404162)<<22|r>>>10)+e<<0,r=((r+=((t=((t+=(i^r&(e^i))+f[12]+1804603682)<<7|t>>>25)+r<<0)^(e=((e+=(r^(i=((i+=(e^t&(r^e))+f[13]-40341101)<<12|i>>>20)+t<<0)&(t^r))+f[14]-1502002290)<<17|e>>>15)+i<<0)&(i^t))+f[15]+1236535329)<<22|r>>>10)+e<<0,r=((r+=((i=((i+=(r^e&((t=((t+=(e^i&(r^e))+f[1]-165796510)<<5|t>>>27)+r<<0)^r))+f[6]-1069501632)<<9|i>>>23)+t<<0)^t&((e=((e+=(t^r&(i^t))+f[11]+643717713)<<14|e>>>18)+i<<0)^i))+f[0]-373897302)<<20|r>>>12)+e<<0,r=((r+=((i=((i+=(r^e&((t=((t+=(e^i&(r^e))+f[5]-701558691)<<5|t>>>27)+r<<0)^r))+f[10]+38016083)<<9|i>>>23)+t<<0)^t&((e=((e+=(t^r&(i^t))+f[15]-660478335)<<14|e>>>18)+i<<0)^i))+f[4]-405537848)<<20|r>>>12)+e<<0,r=((r+=((i=((i+=(r^e&((t=((t+=(e^i&(r^e))+f[9]+568446438)<<5|t>>>27)+r<<0)^r))+f[14]-1019803690)<<9|i>>>23)+t<<0)^t&((e=((e+=(t^r&(i^t))+f[3]-187363961)<<14|e>>>18)+i<<0)^i))+f[8]+1163531501)<<20|r>>>12)+e<<0,r=((r+=((i=((i+=(r^e&((t=((t+=(e^i&(r^e))+f[13]-1444681467)<<5|t>>>27)+r<<0)^r))+f[2]-51403784)<<9|i>>>23)+t<<0)^t&((e=((e+=(t^r&(i^t))+f[7]+1735328473)<<14|e>>>18)+i<<0)^i))+f[12]-1926607734)<<20|r>>>12)+e<<0,r=((r+=((h=(i=((i+=((s=r^e)^(t=((t+=(s^i)+f[5]-378558)<<4|t>>>28)+r<<0))+f[8]-2022574463)<<11|i>>>21)+t<<0)^t)^(e=((e+=(h^r)+f[11]+1839030562)<<16|e>>>16)+i<<0))+f[14]-35309556)<<23|r>>>9)+e<<0,r=((r+=((h=(i=((i+=((s=r^e)^(t=((t+=(s^i)+f[1]-1530992060)<<4|t>>>28)+r<<0))+f[4]+1272893353)<<11|i>>>21)+t<<0)^t)^(e=((e+=(h^r)+f[7]-155497632)<<16|e>>>16)+i<<0))+f[10]-1094730640)<<23|r>>>9)+e<<0,r=((r+=((h=(i=((i+=((s=r^e)^(t=((t+=(s^i)+f[13]+681279174)<<4|t>>>28)+r<<0))+f[0]-358537222)<<11|i>>>21)+t<<0)^t)^(e=((e+=(h^r)+f[3]-722521979)<<16|e>>>16)+i<<0))+f[6]+76029189)<<23|r>>>9)+e<<0,r=((r+=((h=(i=((i+=((s=r^e)^(t=((t+=(s^i)+f[9]-640364487)<<4|t>>>28)+r<<0))+f[12]-421815835)<<11|i>>>21)+t<<0)^t)^(e=((e+=(h^r)+f[15]+530742520)<<16|e>>>16)+i<<0))+f[2]-995338651)<<23|r>>>9)+e<<0,r=((r+=((i=((i+=(r^((t=((t+=(e^(r|~i))+f[0]-198630844)<<6|t>>>26)+r<<0)|~e))+f[7]+1126891415)<<10|i>>>22)+t<<0)^((e=((e+=(t^(i|~r))+f[14]-1416354905)<<15|e>>>17)+i<<0)|~t))+f[5]-57434055)<<21|r>>>11)+e<<0,r=((r+=((i=((i+=(r^((t=((t+=(e^(r|~i))+f[12]+1700485571)<<6|t>>>26)+r<<0)|~e))+f[3]-1894986606)<<10|i>>>22)+t<<0)^((e=((e+=(t^(i|~r))+f[10]-1051523)<<15|e>>>17)+i<<0)|~t))+f[1]-2054922799)<<21|r>>>11)+e<<0,r=((r+=((i=((i+=(r^((t=((t+=(e^(r|~i))+f[8]+1873313359)<<6|t>>>26)+r<<0)|~e))+f[15]-30611744)<<10|i>>>22)+t<<0)^((e=((e+=(t^(i|~r))+f[6]-1560198380)<<15|e>>>17)+i<<0)|~t))+f[13]+1309151649)<<21|r>>>11)+e<<0,r=((r+=((i=((i+=(r^((t=((t+=(e^(r|~i))+f[4]-145523070)<<6|t>>>26)+r<<0)|~e))+f[11]-1120210379)<<10|i>>>22)+t<<0)^((e=((e+=(t^(i|~r))+f[2]+718787259)<<15|e>>>17)+i<<0)|~t))+f[9]-343485551)<<21|r>>>11)+e<<0,this.first?(this.h0=t+1732584193<<0,this.h1=r-271733879<<0,this.h2=e-1732584194<<0,this.h3=i+271733878<<0,this.first=!1):(this.h0=this.h0+t<<0,this.h1=this.h1+r<<0,this.h2=this.h2+e<<0,this.h3=this.h3+i<<0)},t.prototype.hex=function(){this.finalize();var t=this.h0,r=this.h1,e=this.h2,i=this.h3;return n[t>>4&15]+n[15&t]+n[t>>12&15]+n[t>>8&15]+n[t>>20&15]+n[t>>16&15]+n[t>>28&15]+n[t>>24&15]+n[r>>4&15]+n[15&r]+n[r>>12&15]+n[r>>8&15]+n[r>>20&15]+n[r>>16&15]+n[r>>28&15]+n[r>>24&15]+n[e>>4&15]+n[15&e]+n[e>>12&15]+n[e>>8&15]+n[e>>20&15]+n[e>>16&15]+n[e>>28&15]+n[e>>24&15]+n[i>>4&15]+n[15&i]+n[i>>12&15]+n[i>>8&15]+n[i>>20&15]+n[i>>16&15]+n[i>>28&15]+n[i>>24&15]},t.prototype.toString=t.prototype.hex,t.prototype.digest=function(){this.finalize();var t=this.h0,r=this.h1,e=this.h2,i=this.h3;return[255&t,t>>8&255,t>>16&255,t>>24&255,255&r,r>>8&255,r>>16&255,r>>24&255,255&e,e>>8&255,e>>16&255,e>>24&255,255&i,i>>8&255,i>>16&255,i>>24&255]},t.prototype.array=t.prototype.digest,t.prototype.arrayBuffer=function(){this.finalize();var t=new ArrayBuffer(16),r=new Uint32Array(t);return r[0]=this.h0,r[1]=this.h1,r[2]=this.h2,r[3]=this.h3,t},t.prototype.buffer=t.prototype.arrayBuffer,t.prototype.base64=function(){for(var t,r,e,i=\"\",s=this.array(),h=0;h<15;)t=s[h++],r=s[h++],e=s[h++],i+=p[t>>>2]+p[63&(t<<4|r>>>4)]+p[63&(r<<2|e>>>6)]+p[63&e];return t=s[h],i+=p[t>>>2]+p[t<<4&63]+\"==\"};var _=v();f?module.exports=_:(i.md5=_,o&&define(function(){return _}))}();","'use strict'\n\nconst RTMConfig = require('./RTMConfig');\n\nclass RTMProxy {\n\n    constructor(endpoint) {\n\n        this._endpoint = endpoint;\n        this._targetEndpoint = null;\n    }\n\n    get endpoint() {\n\n        return this._endpoint;\n    }\n\n    get targetEndpoint() {\n\n        return this._targetEndpoint;\n    }\n\n    set targetEndpoint(value) {\n\n        this._targetEndpoint = value;\n    }\n\n    buildProxyData(data) {\n\n        return RTMConfig.MsgPack.encode({ endpoint: this._targetEndpoint, data: data });\n    }\n}\n\nmodule.exports = RTMProxy;","'use strict'\n\nconst FPEvent = require('../fpnn/FPEvent');\nconst RTMConfig = require('./RTMConfig');\n\nclass RTMProcessor {\n\n    constructor() {\n\n        FPEvent.assign(this);\n\n        this._map = {};\n\n        this._msgOptions = {\n\n            codec: RTMConfig.MsgPack.createCodec({  \n\n                int64: true\n            }) \n        };\n\n\n        checkExpire.call(this);\n    }\n\n    service(data, cb) {\n\n        let callCb = true;\n\n        if (RTMConfig.SERVER_PUSH.kickOut == data.method) {\n\n            callCb = false;\n        }\n\n        if (RTMConfig.SERVER_PUSH.kickOutRoom == data.method) {\n\n            callCb = false;\n        }\n\n        if (callCb) {\n\n            if (data.flag == 0) {\n\n                cb(JSON.stringify({}), false);\n            }\n\n            if (data.flag == 1) {\n\n                cb(RTMConfig.MsgPack.encode({}, this._msgOptions), false);\n            }\n        }\n\n        let payload = null;\n\n        if (data.flag == 0) {\n\n            payload = JSON.parse(data.payload);\n        }\n\n        if (data.flag == 1) {\n\n            payload = RTMConfig.MsgPack.decode(data.payload, this._msgOptions);\n        }\n\n        if (payload) {\n\n            this[data.method].call(this, payload);\n        }\n    }\n\n    destroy() {\n\n        this._map = {};\n        this.removeEvent();\n    }\n\n    /**\n     * \n     * @param {object} data \n     */\n    kickout(data) {\n\n        this.emit(RTMConfig.SERVER_PUSH.kickOut, data);\n    }\n\n    /**\n     * \n     * @param {Int64} data.rid \n     */\n    kickoutroom(data) {\n        \n        if (data.rid) {\n\n            data.rid = new RTMConfig.Int64(data.rid);\n        }\n\n        this.emit(RTMConfig.SERVER_PUSH.kickOutRoom, data);\n    }\n\n    /**\n     * \n     * @param {Int64} data.from\n     * @param {number} data.mtype\n     * @param {Int64} data.mid\n     * @param {string} data.msg\n     * @param {string} data.attrs\n     * @param {Int64} data.mtime\n     */\n    pushmsg(data) {\n\n        if (data.from) {\n            \n            data.from = new RTMConfig.Int64(data.from);\n        }\n\n        if (data.mid) {\n\n            data.mid = new RTMConfig.Int64(data.mid);\n\n            if (!checkMid.call(this, 1, data.mid, data.from)) {\n\n                return;\n            }\n        }\n        \n        if (data.mtime) {\n            \n            data.mtime = new RTMConfig.Int64(data.mtime);\n        }\n\n        if (data.mtype >= 40 && data.mtype <= 50) {\n\n            this.emit(RTMConfig.SERVER_PUSH.recvFile, data);\n            return;\n        }\n\n        delete data.ftype; \n        this.emit(RTMConfig.SERVER_PUSH.recvMessage, data);\n    }\n\n    /**\n     * \n     * @param {Int64} data.from\n     * @param {Int64} data.gid\n     * @param {number} data.mtype\n     * @param {Int64} data.mid\n     * @param {string} data.msg\n     * @param {string} data.attrs\n     * @param {Int64} data.mtime\n     */\n    pushgroupmsg(data) {\n        \n        if (data.from) {\n\n            data.from = new RTMConfig.Int64(data.from);\n        }\n\n        if (data.mid) {\n            \n            data.mid = new RTMConfig.Int64(data.mid);\n\n            if (!checkMid.call(this, 2, data.mid, data.from, data.gid)) {\n\n                return;\n            }\n        }\n\n        if (data.gid) {\n\n            data.gid = new RTMConfig.Int64(data.gid);\n        }\n\n        if (data.mtime) {\n            \n            data.mtime = new RTMConfig.Int64(data.mtime);\n        }\n\n        if (data.mtype >= 40 && data.mtype <= 50) {\n\n            this.emit(RTMConfig.SERVER_PUSH.recvGroupFile, data);\n            return;\n        }\n\n        delete data.ftype; \n        this.emit(RTMConfig.SERVER_PUSH.recvGroupMessage, data);\n    }\n\n    /**\n     * \n     * @param {Int64} data.from\n     * @param {Int64} data.rid\n     * @param {number} data.mtype\n     * @param {Int64} data.mid\n     * @param {string} data.msg\n     * @param {string} data.attrs\n     * @param {Int64} data.mtime\n     */\n    pushroommsg(data) {\n\n        if (data.from) {\n\n            data.from = new RTMConfig.Int64(data.from);\n        }\n\n        if (data.mid) {\n            \n            data.mid = new RTMConfig.Int64(data.mid);\n\n            if (!checkMid.call(this, 3, data.mid, data.from, data.rid)) {\n\n                return;\n            }\n        }\n\n        if (data.rid) {\n\n            data.rid = new RTMConfig.Int64(data.rid);\n        }\n\n        if (data.mtime) {\n            \n            data.mtime = new RTMConfig.Int64(data.mtime);\n        }\n\n        if (data.mtype >= 40 && data.mtype <= 50) {\n\n            this.emit(RTMConfig.SERVER_PUSH.recvRoomFile, data);\n            return;\n        }\n\n        delete data.ftype; \n        this.emit(RTMConfig.SERVER_PUSH.recvRoomMessage, data);\n    }\n\n    /**\n     * \n     * @param {Int64} data.from\n     * @param {number} data.mtype\n     * @param {Int64} data.mid\n     * @param {string} data.msg\n     * @param {string} data.attrs\n     * @param {Int64} data.mtime\n     */\n    pushbroadcastmsg(data) {\n\n        if (data.from) {\n\n            data.from = new RTMConfig.Int64(data.from);\n        }\n\n        if (data.mid) {\n\n            data.mid = new RTMConfig.Int64(data.mid);\n\n            if (!checkMid.call(this, 4, data.mid, data.from)) {\n\n                return;\n            }\n        }\n\n        if (data.mtime) {\n            \n            data.mtime = new RTMConfig.Int64(data.mtime);\n        }\n\n        if (data.mtype >= 40 && data.mtype <= 50) {\n            \n            this.emit(RTMConfig.SERVER_PUSH.recvBroadcastFile, data);\n            return;\n        }\n\n        delete data.ftype; \n        this.emit(RTMConfig.SERVER_PUSH.recvBroadcastMessage, data);\n    }\n\n    /**\n     * \n     * @param {object} data \n     */\n    ping(data) {\n\n        this.emit(RTMConfig.SERVER_PUSH.recvPing, data);\n    }\n}\n\nfunction checkMid(type, mid, uid, rgid) {\n\n    let arr = [];\n\n    arr.push(type);\n    arr.push(mid);\n    arr.push(uid);\n\n    if (rgid != undefined) {\n\n        arr.push(rgid);\n    } \n\n    let key = arr.join('_');\n\n    if (this._map.hasOwnProperty(key)) {\n\n        if (this._map[key] > Date.now()) {\n\n            return false;\n        }\n\n        delete this._map[key];\n    }\n\n    this._map[key] = RTMConfig.MID_TTL + Date.now();\n    return true;\n}\n\nfunction checkExpire() {\n\n    let self = this;\n\n    setInterval(function() {\n\n        for (let key in self._map) {\n\n            if (self._map[key] > Date.now()) {\n\n                continue;\n            } \n\n            delayRemove.call(self, key);\n        }\n    }, RTMConfig.MID_TTL + 1000);\n}\n\nfunction delayRemove(key) {\n\n    let self = this;\n\n    setTimeout(function() {\n\n        delete self._map[key];\n    }, 0);\n}\n\nmodule.exports = RTMProcessor;","!function(t){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{var r;r=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,r.msgpack=t()}}(function(){return function t(r,e,n){function i(f,u){if(!e[f]){if(!r[f]){var a=\"function\"==typeof require&&require;if(!u&&a)return a(f,!0);if(o)return o(f,!0);var s=new Error(\"Cannot find module '\"+f+\"'\");throw s.code=\"MODULE_NOT_FOUND\",s}var c=e[f]={exports:{}};r[f][0].call(c.exports,function(t){var e=r[f][1][t];return i(e?e:t)},c,c.exports,t,r,e,n)}return e[f].exports}for(var o=\"function\"==typeof require&&require,f=0;f<n.length;f++)i(n[f]);return i}({1:[function(t,r,e){e.encode=t(\"./encode\").encode,e.decode=t(\"./decode\").decode,e.Encoder=t(\"./encoder\").Encoder,e.Decoder=t(\"./decoder\").Decoder,e.createCodec=t(\"./ext\").createCodec,e.codec=t(\"./codec\").codec},{\"./codec\":10,\"./decode\":12,\"./decoder\":13,\"./encode\":15,\"./encoder\":16,\"./ext\":20}],2:[function(t,r,e){(function(Buffer){function t(t){return t&&t.isBuffer&&t}r.exports=t(\"undefined\"!=typeof Buffer&&Buffer)||t(this.Buffer)||t(\"undefined\"!=typeof window&&window.Buffer)||this.Buffer}).call(this,t(\"buffer\").Buffer)},{buffer:29}],3:[function(t,r,e){function n(t,r){for(var e=this,n=r||(r|=0),i=t.length,o=0,f=0;f<i;)o=t.charCodeAt(f++),o<128?e[n++]=o:o<2048?(e[n++]=192|o>>>6,e[n++]=128|63&o):o<55296||o>57343?(e[n++]=224|o>>>12,e[n++]=128|o>>>6&63,e[n++]=128|63&o):(o=(o-55296<<10|t.charCodeAt(f++)-56320)+65536,e[n++]=240|o>>>18,e[n++]=128|o>>>12&63,e[n++]=128|o>>>6&63,e[n++]=128|63&o);return n-r}function i(t,r,e){var n=this,i=0|r;e||(e=n.length);for(var o=\"\",f=0;i<e;)f=n[i++],f<128?o+=String.fromCharCode(f):(192===(224&f)?f=(31&f)<<6|63&n[i++]:224===(240&f)?f=(15&f)<<12|(63&n[i++])<<6|63&n[i++]:240===(248&f)&&(f=(7&f)<<18|(63&n[i++])<<12|(63&n[i++])<<6|63&n[i++]),f>=65536?(f-=65536,o+=String.fromCharCode((f>>>10)+55296,(1023&f)+56320)):o+=String.fromCharCode(f));return o}function o(t,r,e,n){var i;e||(e=0),n||0===n||(n=this.length),r||(r=0);var o=n-e;if(t===this&&e<r&&r<n)for(i=o-1;i>=0;i--)t[i+r]=this[i+e];else for(i=0;i<o;i++)t[i+r]=this[i+e];return o}e.copy=o,e.toString=i,e.write=n},{}],4:[function(t,r,e){function n(t){return new Array(t)}function i(t){if(!o.isBuffer(t)&&o.isView(t))t=o.Uint8Array.from(t);else if(o.isArrayBuffer(t))t=new Uint8Array(t);else{if(\"string\"==typeof t)return o.from.call(e,t);if(\"number\"==typeof t)throw new TypeError('\"value\" argument must not be a number')}return Array.prototype.slice.call(t)}var o=t(\"./bufferish\"),e=r.exports=n(0);e.alloc=n,e.concat=o.concat,e.from=i},{\"./bufferish\":8}],5:[function(t,r,e){function n(t){return new Buffer(t)}function i(t){if(!o.isBuffer(t)&&o.isView(t))t=o.Uint8Array.from(t);else if(o.isArrayBuffer(t))t=new Uint8Array(t);else{if(\"string\"==typeof t)return o.from.call(e,t);if(\"number\"==typeof t)throw new TypeError('\"value\" argument must not be a number')}return Buffer.from&&1!==Buffer.from.length?Buffer.from(t):new Buffer(t)}var o=t(\"./bufferish\"),Buffer=o.global,e=r.exports=o.hasBuffer?n(0):[];e.alloc=o.hasBuffer&&Buffer.alloc||n,e.concat=o.concat,e.from=i},{\"./bufferish\":8}],6:[function(t,r,e){function n(t,r,e,n){var o=a.isBuffer(this),f=a.isBuffer(t);if(o&&f)return this.copy(t,r,e,n);if(c||o||f||!a.isView(this)||!a.isView(t))return u.copy.call(this,t,r,e,n);var s=e||null!=n?i.call(this,e,n):this;return t.set(s,r),s.length}function i(t,r){var e=this.slice||!c&&this.subarray;if(e)return e.call(this,t,r);var i=a.alloc.call(this,r-t);return n.call(this,i,0,t,r),i}function o(t,r,e){var n=!s&&a.isBuffer(this)?this.toString:u.toString;return n.apply(this,arguments)}function f(t){function r(){var r=this[t]||u[t];return r.apply(this,arguments)}return r}var u=t(\"./buffer-lite\");e.copy=n,e.slice=i,e.toString=o,e.write=f(\"write\");var a=t(\"./bufferish\"),Buffer=a.global,s=a.hasBuffer&&\"TYPED_ARRAY_SUPPORT\"in Buffer,c=s&&!Buffer.TYPED_ARRAY_SUPPORT},{\"./buffer-lite\":3,\"./bufferish\":8}],7:[function(t,r,e){function n(t){return new Uint8Array(t)}function i(t){if(o.isView(t)){var r=t.byteOffset,n=t.byteLength;t=t.buffer,t.byteLength!==n&&(t.slice?t=t.slice(r,r+n):(t=new Uint8Array(t),t.byteLength!==n&&(t=Array.prototype.slice.call(t,r,r+n))))}else{if(\"string\"==typeof t)return o.from.call(e,t);if(\"number\"==typeof t)throw new TypeError('\"value\" argument must not be a number')}return new Uint8Array(t)}var o=t(\"./bufferish\"),e=r.exports=o.hasArrayBuffer?n(0):[];e.alloc=n,e.concat=o.concat,e.from=i},{\"./bufferish\":8}],8:[function(t,r,e){function n(t){return\"string\"==typeof t?u.call(this,t):a(this).from(t)}function i(t){return a(this).alloc(t)}function o(t,r){function n(t){r+=t.length}function o(t){a+=w.copy.call(t,u,a)}r||(r=0,Array.prototype.forEach.call(t,n));var f=this!==e&&this||t[0],u=i.call(f,r),a=0;return Array.prototype.forEach.call(t,o),u}function f(t){return t instanceof ArrayBuffer||E(t)}function u(t){var r=3*t.length,e=i.call(this,r),n=w.write.call(e,t);return r!==n&&(e=w.slice.call(e,0,n)),e}function a(t){return d(t)?g:y(t)?b:p(t)?v:h?g:l?b:v}function s(){return!1}function c(t,r){return t=\"[object \"+t+\"]\",function(e){return null!=e&&{}.toString.call(r?e[r]:e)===t}}var Buffer=e.global=t(\"./buffer-global\"),h=e.hasBuffer=Buffer&&!!Buffer.isBuffer,l=e.hasArrayBuffer=\"undefined\"!=typeof ArrayBuffer,p=e.isArray=t(\"isarray\");e.isArrayBuffer=l?f:s;var d=e.isBuffer=h?Buffer.isBuffer:s,y=e.isView=l?ArrayBuffer.isView||c(\"ArrayBuffer\",\"buffer\"):s;e.alloc=i,e.concat=o,e.from=n;var v=e.Array=t(\"./bufferish-array\"),g=e.Buffer=t(\"./bufferish-buffer\"),b=e.Uint8Array=t(\"./bufferish-uint8array\"),w=e.prototype=t(\"./bufferish-proto\"),E=c(\"ArrayBuffer\")},{\"./buffer-global\":2,\"./bufferish-array\":4,\"./bufferish-buffer\":5,\"./bufferish-proto\":6,\"./bufferish-uint8array\":7,isarray:34}],9:[function(t,r,e){function n(t){return this instanceof n?(this.options=t,void this.init()):new n(t)}function i(t){for(var r in t)n.prototype[r]=o(n.prototype[r],t[r])}function o(t,r){function e(){return t.apply(this,arguments),r.apply(this,arguments)}return t&&r?e:t||r}function f(t){function r(t,r){return r(t)}return t=t.slice(),function(e){return t.reduce(r,e)}}function u(t){return s(t)?f(t):t}function a(t){return new n(t)}var s=t(\"isarray\");e.createCodec=a,e.install=i,e.filter=u;var c=t(\"./bufferish\");n.prototype.init=function(){var t=this.options;return t&&t.uint8array&&(this.bufferish=c.Uint8Array),this},e.preset=a({preset:!0})},{\"./bufferish\":8,isarray:34}],10:[function(t,r,e){t(\"./read-core\"),t(\"./write-core\"),e.codec={preset:t(\"./codec-base\").preset}},{\"./codec-base\":9,\"./read-core\":22,\"./write-core\":25}],11:[function(t,r,e){function n(t){if(!(this instanceof n))return new n(t);if(t&&(this.options=t,t.codec)){var r=this.codec=t.codec;r.bufferish&&(this.bufferish=r.bufferish)}}e.DecodeBuffer=n;var i=t(\"./read-core\").preset,o=t(\"./flex-buffer\").FlexDecoder;o.mixin(n.prototype),n.prototype.codec=i,n.prototype.fetch=function(){return this.codec.decode(this)}},{\"./flex-buffer\":21,\"./read-core\":22}],12:[function(t,r,e){function n(t,r){var e=new i(r);return e.write(t),e.read()}e.decode=n;var i=t(\"./decode-buffer\").DecodeBuffer},{\"./decode-buffer\":11}],13:[function(t,r,e){function n(t){return this instanceof n?void o.call(this,t):new n(t)}e.Decoder=n;var i=t(\"event-lite\"),o=t(\"./decode-buffer\").DecodeBuffer;n.prototype=new o,i.mixin(n.prototype),n.prototype.decode=function(t){arguments.length&&this.write(t),this.flush()},n.prototype.push=function(t){this.emit(\"data\",t)},n.prototype.end=function(t){this.decode(t),this.emit(\"end\")}},{\"./decode-buffer\":11,\"event-lite\":31}],14:[function(t,r,e){function n(t){if(!(this instanceof n))return new n(t);if(t&&(this.options=t,t.codec)){var r=this.codec=t.codec;r.bufferish&&(this.bufferish=r.bufferish)}}e.EncodeBuffer=n;var i=t(\"./write-core\").preset,o=t(\"./flex-buffer\").FlexEncoder;o.mixin(n.prototype),n.prototype.codec=i,n.prototype.write=function(t){this.codec.encode(this,t)}},{\"./flex-buffer\":21,\"./write-core\":25}],15:[function(t,r,e){function n(t,r){var e=new i(r);return e.write(t),e.read()}e.encode=n;var i=t(\"./encode-buffer\").EncodeBuffer},{\"./encode-buffer\":14}],16:[function(t,r,e){function n(t){return this instanceof n?void o.call(this,t):new n(t)}e.Encoder=n;var i=t(\"event-lite\"),o=t(\"./encode-buffer\").EncodeBuffer;n.prototype=new o,i.mixin(n.prototype),n.prototype.encode=function(t){this.write(t),this.emit(\"data\",this.read())},n.prototype.end=function(t){arguments.length&&this.encode(t),this.flush(),this.emit(\"end\")}},{\"./encode-buffer\":14,\"event-lite\":31}],17:[function(t,r,e){function n(t,r){return this instanceof n?(this.buffer=i.from(t),void(this.type=r)):new n(t,r)}e.ExtBuffer=n;var i=t(\"./bufferish\")},{\"./bufferish\":8}],18:[function(t,r,e){function n(t){t.addExtPacker(14,Error,[u,i]),t.addExtPacker(1,EvalError,[u,i]),t.addExtPacker(2,RangeError,[u,i]),t.addExtPacker(3,ReferenceError,[u,i]),t.addExtPacker(4,SyntaxError,[u,i]),t.addExtPacker(5,TypeError,[u,i]),t.addExtPacker(6,URIError,[u,i]),t.addExtPacker(10,RegExp,[f,i]),t.addExtPacker(11,Boolean,[o,i]),t.addExtPacker(12,String,[o,i]),t.addExtPacker(13,Date,[Number,i]),t.addExtPacker(15,Number,[o,i]),\"undefined\"!=typeof Uint8Array&&(t.addExtPacker(17,Int8Array,c),t.addExtPacker(18,Uint8Array,c),t.addExtPacker(19,Int16Array,c),t.addExtPacker(20,Uint16Array,c),t.addExtPacker(21,Int32Array,c),t.addExtPacker(22,Uint32Array,c),t.addExtPacker(23,Float32Array,c),\"undefined\"!=typeof Float64Array&&t.addExtPacker(24,Float64Array,c),\"undefined\"!=typeof Uint8ClampedArray&&t.addExtPacker(25,Uint8ClampedArray,c),t.addExtPacker(26,ArrayBuffer,c),t.addExtPacker(29,DataView,c)),s.hasBuffer&&t.addExtPacker(27,Buffer,s.from)}function i(r){return a||(a=t(\"./encode\").encode),a(r)}function o(t){return t.valueOf()}function f(t){t=RegExp.prototype.toString.call(t).split(\"/\"),t.shift();var r=[t.pop()];return r.unshift(t.join(\"/\")),r}function u(t){var r={};for(var e in h)r[e]=t[e];return r}e.setExtPackers=n;var a,s=t(\"./bufferish\"),Buffer=s.global,c=s.Uint8Array.from,h={name:1,message:1,stack:1,columnNumber:1,fileName:1,lineNumber:1}},{\"./bufferish\":8,\"./encode\":15}],19:[function(t,r,e){function n(t){t.addExtUnpacker(14,[i,f(Error)]),t.addExtUnpacker(1,[i,f(EvalError)]),t.addExtUnpacker(2,[i,f(RangeError)]),t.addExtUnpacker(3,[i,f(ReferenceError)]),t.addExtUnpacker(4,[i,f(SyntaxError)]),t.addExtUnpacker(5,[i,f(TypeError)]),t.addExtUnpacker(6,[i,f(URIError)]),t.addExtUnpacker(10,[i,o]),t.addExtUnpacker(11,[i,u(Boolean)]),t.addExtUnpacker(12,[i,u(String)]),t.addExtUnpacker(13,[i,u(Date)]),t.addExtUnpacker(15,[i,u(Number)]),\"undefined\"!=typeof Uint8Array&&(t.addExtUnpacker(17,u(Int8Array)),t.addExtUnpacker(18,u(Uint8Array)),t.addExtUnpacker(19,[a,u(Int16Array)]),t.addExtUnpacker(20,[a,u(Uint16Array)]),t.addExtUnpacker(21,[a,u(Int32Array)]),t.addExtUnpacker(22,[a,u(Uint32Array)]),t.addExtUnpacker(23,[a,u(Float32Array)]),\"undefined\"!=typeof Float64Array&&t.addExtUnpacker(24,[a,u(Float64Array)]),\"undefined\"!=typeof Uint8ClampedArray&&t.addExtUnpacker(25,u(Uint8ClampedArray)),t.addExtUnpacker(26,a),t.addExtUnpacker(29,[a,u(DataView)])),c.hasBuffer&&t.addExtUnpacker(27,u(Buffer))}function i(r){return s||(s=t(\"./decode\").decode),s(r)}function o(t){return RegExp.apply(null,t)}function f(t){return function(r){var e=new t;for(var n in h)e[n]=r[n];return e}}function u(t){return function(r){return new t(r)}}function a(t){return new Uint8Array(t).buffer}e.setExtUnpackers=n;var s,c=t(\"./bufferish\"),Buffer=c.global,h={name:1,message:1,stack:1,columnNumber:1,fileName:1,lineNumber:1}},{\"./bufferish\":8,\"./decode\":12}],20:[function(t,r,e){t(\"./read-core\"),t(\"./write-core\"),e.createCodec=t(\"./codec-base\").createCodec},{\"./codec-base\":9,\"./read-core\":22,\"./write-core\":25}],21:[function(t,r,e){function n(){if(!(this instanceof n))return new n}function i(){if(!(this instanceof i))return new i}function o(){function t(t){var r=this.offset?p.prototype.slice.call(this.buffer,this.offset):this.buffer;this.buffer=r?t?this.bufferish.concat([r,t]):r:t,this.offset=0}function r(){for(;this.offset<this.buffer.length;){var t,r=this.offset;try{t=this.fetch()}catch(t){if(t&&t.message!=v)throw t;this.offset=r;break}this.push(t)}}function e(t){var r=this.offset,e=r+t;if(e>this.buffer.length)throw new Error(v);return this.offset=e,r}return{bufferish:p,write:t,fetch:a,flush:r,push:c,pull:h,read:s,reserve:e,offset:0}}function f(){function t(){var t=this.start;if(t<this.offset){var r=this.start=this.offset;return p.prototype.slice.call(this.buffer,t,r)}}function r(){for(;this.start<this.offset;){var t=this.fetch();t&&this.push(t)}}function e(){var t=this.buffers||(this.buffers=[]),r=t.length>1?this.bufferish.concat(t):t[0];return t.length=0,r}function n(t){var r=0|t;if(this.buffer){var e=this.buffer.length,n=0|this.offset,i=n+r;if(i<e)return this.offset=i,n;this.flush(),t=Math.max(t,Math.min(2*e,this.maxBufferSize))}return t=Math.max(t,this.minBufferSize),this.buffer=this.bufferish.alloc(t),this.start=0,this.offset=r,0}function i(t){var r=t.length;if(r>this.minBufferSize)this.flush(),this.push(t);else{var e=this.reserve(r);p.prototype.copy.call(t,this.buffer,e)}}return{bufferish:p,write:u,fetch:t,flush:r,push:c,pull:e,read:s,reserve:n,send:i,maxBufferSize:y,minBufferSize:d,offset:0,start:0}}function u(){throw new Error(\"method not implemented: write()\")}function a(){throw new Error(\"method not implemented: fetch()\")}function s(){var t=this.buffers&&this.buffers.length;return t?(this.flush(),this.pull()):this.fetch()}function c(t){var r=this.buffers||(this.buffers=[]);r.push(t)}function h(){var t=this.buffers||(this.buffers=[]);return t.shift()}function l(t){function r(r){for(var e in t)r[e]=t[e];return r}return r}e.FlexDecoder=n,e.FlexEncoder=i;var p=t(\"./bufferish\"),d=2048,y=65536,v=\"BUFFER_SHORTAGE\";n.mixin=l(o()),n.mixin(n.prototype),i.mixin=l(f()),i.mixin(i.prototype)},{\"./bufferish\":8}],22:[function(t,r,e){function n(t){function r(t){var r=s(t),n=e[r];if(!n)throw new Error(\"Invalid type: \"+(r?\"0x\"+r.toString(16):r));return n(t)}var e=c.getReadToken(t);return r}function i(){var t=this.options;return this.decode=n(t),t&&t.preset&&a.setExtUnpackers(this),this}function o(t,r){var e=this.extUnpackers||(this.extUnpackers=[]);e[t]=h.filter(r)}function f(t){function r(r){return new u(r,t)}var e=this.extUnpackers||(this.extUnpackers=[]);return e[t]||r}var u=t(\"./ext-buffer\").ExtBuffer,a=t(\"./ext-unpacker\"),s=t(\"./read-format\").readUint8,c=t(\"./read-token\"),h=t(\"./codec-base\");h.install({addExtUnpacker:o,getExtUnpacker:f,init:i}),e.preset=i.call(h.preset)},{\"./codec-base\":9,\"./ext-buffer\":17,\"./ext-unpacker\":19,\"./read-format\":23,\"./read-token\":24}],23:[function(t,r,e){function n(t){var r=k.hasArrayBuffer&&t&&t.binarraybuffer,e=t&&t.int64,n=T&&t&&t.usemap,B={map:n?o:i,array:f,str:u,bin:r?s:a,ext:c,uint8:h,uint16:p,uint32:y,uint64:g(8,e?E:b),int8:l,int16:d,int32:v,int64:g(8,e?A:w),float32:g(4,m),float64:g(8,x)};return B}function i(t,r){var e,n={},i=new Array(r),o=new Array(r),f=t.codec.decode;for(e=0;e<r;e++)i[e]=f(t),o[e]=f(t);for(e=0;e<r;e++)n[i[e]]=o[e];return n}function o(t,r){var e,n=new Map,i=new Array(r),o=new Array(r),f=t.codec.decode;for(e=0;e<r;e++)i[e]=f(t),o[e]=f(t);for(e=0;e<r;e++)n.set(i[e],o[e]);return n}function f(t,r){for(var e=new Array(r),n=t.codec.decode,i=0;i<r;i++)e[i]=n(t);return e}function u(t,r){var e=t.reserve(r),n=e+r;return _.toString.call(t.buffer,\"utf-8\",e,n)}function a(t,r){var e=t.reserve(r),n=e+r,i=_.slice.call(t.buffer,e,n);return k.from(i)}function s(t,r){var e=t.reserve(r),n=e+r,i=_.slice.call(t.buffer,e,n);return k.Uint8Array.from(i).buffer}function c(t,r){var e=t.reserve(r+1),n=t.buffer[e++],i=e+r,o=t.codec.getExtUnpacker(n);if(!o)throw new Error(\"Invalid ext type: \"+(n?\"0x\"+n.toString(16):n));var f=_.slice.call(t.buffer,e,i);return o(f)}function h(t){var r=t.reserve(1);return t.buffer[r]}function l(t){var r=t.reserve(1),e=t.buffer[r];return 128&e?e-256:e}function p(t){var r=t.reserve(2),e=t.buffer;return e[r++]<<8|e[r]}function d(t){var r=t.reserve(2),e=t.buffer,n=e[r++]<<8|e[r];return 32768&n?n-65536:n}function y(t){var r=t.reserve(4),e=t.buffer;return 16777216*e[r++]+(e[r++]<<16)+(e[r++]<<8)+e[r]}function v(t){var r=t.reserve(4),e=t.buffer;return e[r++]<<24|e[r++]<<16|e[r++]<<8|e[r]}function g(t,r){return function(e){var n=e.reserve(t);return r.call(e.buffer,n,S)}}function b(t){return new P(this,t).toNumber()}function w(t){return new R(this,t).toNumber()}function E(t){return new P(this,t)}function A(t){return new R(this,t)}function m(t){return B.read(this,t,!1,23,4)}function x(t){return B.read(this,t,!1,52,8)}var B=t(\"ieee754\"),U=t(\"int64-buffer\"),P=U.Uint64BE,R=U.Int64BE;e.getReadFormat=n,e.readUint8=h;var k=t(\"./bufferish\"),_=t(\"./bufferish-proto\"),T=\"undefined\"!=typeof Map,S=!0},{\"./bufferish\":8,\"./bufferish-proto\":6,ieee754:32,\"int64-buffer\":33}],24:[function(t,r,e){function n(t){var r=s.getReadFormat(t);return t&&t.useraw?o(r):i(r)}function i(t){var r,e=new Array(256);for(r=0;r<=127;r++)e[r]=f(r);for(r=128;r<=143;r++)e[r]=a(r-128,t.map);for(r=144;r<=159;r++)e[r]=a(r-144,t.array);for(r=160;r<=191;r++)e[r]=a(r-160,t.str);for(e[192]=f(null),e[193]=null,e[194]=f(!1),e[195]=f(!0),e[196]=u(t.uint8,t.bin),e[197]=u(t.uint16,t.bin),e[198]=u(t.uint32,t.bin),e[199]=u(t.uint8,t.ext),e[200]=u(t.uint16,t.ext),e[201]=u(t.uint32,t.ext),e[202]=t.float32,e[203]=t.float64,e[204]=t.uint8,e[205]=t.uint16,e[206]=t.uint32,e[207]=t.uint64,e[208]=t.int8,e[209]=t.int16,e[210]=t.int32,e[211]=t.int64,e[212]=a(1,t.ext),e[213]=a(2,t.ext),e[214]=a(4,t.ext),e[215]=a(8,t.ext),e[216]=a(16,t.ext),e[217]=u(t.uint8,t.str),e[218]=u(t.uint16,t.str),e[219]=u(t.uint32,t.str),e[220]=u(t.uint16,t.array),e[221]=u(t.uint32,t.array),e[222]=u(t.uint16,t.map),e[223]=u(t.uint32,t.map),r=224;r<=255;r++)e[r]=f(r-256);return e}function o(t){var r,e=i(t).slice();for(e[217]=e[196],e[218]=e[197],e[219]=e[198],r=160;r<=191;r++)e[r]=a(r-160,t.bin);return e}function f(t){return function(){return t}}function u(t,r){return function(e){var n=t(e);return r(e,n)}}function a(t,r){return function(e){return r(e,t)}}var s=t(\"./read-format\");e.getReadToken=n},{\"./read-format\":23}],25:[function(t,r,e){function n(t){function r(t,r){var n=e[typeof r];if(!n)throw new Error('Unsupported type \"'+typeof r+'\": '+r);n(t,r)}var e=s.getWriteType(t);return r}function i(){var t=this.options;return this.encode=n(t),t&&t.preset&&a.setExtPackers(this),this}function o(t,r,e){function n(r){return e&&(r=e(r)),new u(r,t)}e=c.filter(e);var i=r.name;if(i&&\"Object\"!==i){var o=this.extPackers||(this.extPackers={});o[i]=n}else{var f=this.extEncoderList||(this.extEncoderList=[]);f.unshift([r,n])}}function f(t){var r=this.extPackers||(this.extPackers={}),e=t.constructor,n=e&&e.name&&r[e.name];if(n)return n;for(var i=this.extEncoderList||(this.extEncoderList=[]),o=i.length,f=0;f<o;f++){var u=i[f];if(e===u[0])return u[1]}}var u=t(\"./ext-buffer\").ExtBuffer,a=t(\"./ext-packer\"),s=t(\"./write-type\"),c=t(\"./codec-base\");c.install({addExtPacker:o,getExtPacker:f,init:i}),e.preset=i.call(c.preset)},{\"./codec-base\":9,\"./ext-buffer\":17,\"./ext-packer\":18,\"./write-type\":27}],26:[function(t,r,e){function n(t){return t&&t.uint8array?i():m||E.hasBuffer&&t&&t.safe?f():o()}function i(){var t=o();return t[202]=c(202,4,p),t[203]=c(203,8,d),t}function o(){var t=w.slice();return t[196]=u(196),t[197]=a(197),t[198]=s(198),t[199]=u(199),t[200]=a(200),t[201]=s(201),t[202]=c(202,4,x.writeFloatBE||p,!0),t[203]=c(203,8,x.writeDoubleBE||d,!0),t[204]=u(204),t[205]=a(205),t[206]=s(206),t[207]=c(207,8,h),t[208]=u(208),t[209]=a(209),t[210]=s(210),t[211]=c(211,8,l),t[217]=u(217),t[218]=a(218),t[219]=s(219),t[220]=a(220),t[221]=s(221),t[222]=a(222),t[223]=s(223),t}function f(){var t=w.slice();return t[196]=c(196,1,Buffer.prototype.writeUInt8),t[197]=c(197,2,Buffer.prototype.writeUInt16BE),t[198]=c(198,4,Buffer.prototype.writeUInt32BE),t[199]=c(199,1,Buffer.prototype.writeUInt8),t[200]=c(200,2,Buffer.prototype.writeUInt16BE),t[201]=c(201,4,Buffer.prototype.writeUInt32BE),t[202]=c(202,4,Buffer.prototype.writeFloatBE),t[203]=c(203,8,Buffer.prototype.writeDoubleBE),t[204]=c(204,1,Buffer.prototype.writeUInt8),t[205]=c(205,2,Buffer.prototype.writeUInt16BE),t[206]=c(206,4,Buffer.prototype.writeUInt32BE),t[207]=c(207,8,h),t[208]=c(208,1,Buffer.prototype.writeInt8),t[209]=c(209,2,Buffer.prototype.writeInt16BE),t[210]=c(210,4,Buffer.prototype.writeInt32BE),t[211]=c(211,8,l),t[217]=c(217,1,Buffer.prototype.writeUInt8),t[218]=c(218,2,Buffer.prototype.writeUInt16BE),t[219]=c(219,4,Buffer.prototype.writeUInt32BE),t[220]=c(220,2,Buffer.prototype.writeUInt16BE),t[221]=c(221,4,Buffer.prototype.writeUInt32BE),t[222]=c(222,2,Buffer.prototype.writeUInt16BE),t[223]=c(223,4,Buffer.prototype.writeUInt32BE),t}function u(t){return function(r,e){var n=r.reserve(2),i=r.buffer;i[n++]=t,i[n]=e}}function a(t){return function(r,e){var n=r.reserve(3),i=r.buffer;i[n++]=t,i[n++]=e>>>8,i[n]=e}}function s(t){return function(r,e){var n=r.reserve(5),i=r.buffer;i[n++]=t,i[n++]=e>>>24,i[n++]=e>>>16,i[n++]=e>>>8,i[n]=e}}function c(t,r,e,n){return function(i,o){var f=i.reserve(r+1);i.buffer[f++]=t,e.call(i.buffer,o,f,n)}}function h(t,r){new g(this,r,t)}function l(t,r){new b(this,r,t)}function p(t,r){y.write(this,t,r,!1,23,4)}function d(t,r){y.write(this,t,r,!1,52,8)}var y=t(\"ieee754\"),v=t(\"int64-buffer\"),g=v.Uint64BE,b=v.Int64BE,w=t(\"./write-uint8\").uint8,E=t(\"./bufferish\"),Buffer=E.global,A=E.hasBuffer&&\"TYPED_ARRAY_SUPPORT\"in Buffer,m=A&&!Buffer.TYPED_ARRAY_SUPPORT,x=E.hasBuffer&&Buffer.prototype||{};e.getWriteToken=n},{\"./bufferish\":8,\"./write-uint8\":28,ieee754:32,\"int64-buffer\":33}],27:[function(t,r,e){function n(t){function r(t,r){var e=r?195:194;_[e](t,r)}function e(t,r){var e,n=0|r;return r!==n?(e=203,void _[e](t,r)):(e=-32<=n&&n<=127?255&n:0<=n?n<=255?204:n<=65535?205:206:-128<=n?208:-32768<=n?209:210,void _[e](t,n))}function n(t,r){var e=207;_[e](t,r.toArray())}function o(t,r){var e=211;_[e](t,r.toArray())}function v(t){return t<32?1:t<=255?2:t<=65535?3:5}function g(t){return t<32?1:t<=65535?3:5}function b(t){function r(r,e){var n=e.length,i=5+3*n;r.offset=r.reserve(i);var o=r.buffer,f=t(n),u=r.offset+f;n=s.write.call(o,e,u);var a=t(n);if(f!==a){var c=u+a-f,h=u+n;s.copy.call(o,o,c,u,h)}var l=1===a?160+n:a<=3?215+a:219;_[l](r,n),r.offset+=n}return r}function w(t,r){if(null===r)return A(t,r);if(I(r))return Y(t,r);if(i(r))return m(t,r);if(f.isUint64BE(r))return n(t,r);if(u.isInt64BE(r))return o(t,r);var e=t.codec.getExtPacker(r);return e&&(r=e(r)),r instanceof l?U(t,r):void D(t,r)}function E(t,r){return I(r)?k(t,r):void w(t,r)}function A(t,r){var e=192;_[e](t,r)}function m(t,r){var e=r.length,n=e<16?144+e:e<=65535?220:221;_[n](t,e);for(var i=t.codec.encode,o=0;o<e;o++)i(t,r[o])}function x(t,r){var e=r.length,n=e<255?196:e<=65535?197:198;_[n](t,e),t.send(r)}function B(t,r){x(t,new Uint8Array(r))}function U(t,r){var e=r.buffer,n=e.length,i=y[n]||(n<255?199:n<=65535?200:201);_[i](t,n),h[r.type](t),t.send(e)}function P(t,r){var e=Object.keys(r),n=e.length,i=n<16?128+n:n<=65535?222:223;_[i](t,n);var o=t.codec.encode;e.forEach(function(e){o(t,e),o(t,r[e])})}function R(t,r){if(!(r instanceof Map))return P(t,r);var e=r.size,n=e<16?128+e:e<=65535?222:223;_[n](t,e);var i=t.codec.encode;r.forEach(function(r,e,n){i(t,e),i(t,r)})}function k(t,r){var e=r.length,n=e<32?160+e:e<=65535?218:219;_[n](t,e),t.send(r)}var _=c.getWriteToken(t),T=t&&t.useraw,S=p&&t&&t.binarraybuffer,I=S?a.isArrayBuffer:a.isBuffer,Y=S?B:x,C=d&&t&&t.usemap,D=C?R:P,O={boolean:r,function:A,number:e,object:T?E:w,string:b(T?g:v),symbol:A,undefined:A};return O}var i=t(\"isarray\"),o=t(\"int64-buffer\"),f=o.Uint64BE,u=o.Int64BE,a=t(\"./bufferish\"),s=t(\"./bufferish-proto\"),c=t(\"./write-token\"),h=t(\"./write-uint8\").uint8,l=t(\"./ext-buffer\").ExtBuffer,p=\"undefined\"!=typeof Uint8Array,d=\"undefined\"!=typeof Map,y=[];y[1]=212,y[2]=213,y[4]=214,y[8]=215,y[16]=216,e.getWriteType=n},{\"./bufferish\":8,\"./bufferish-proto\":6,\"./ext-buffer\":17,\"./write-token\":26,\"./write-uint8\":28,\"int64-buffer\":33,isarray:34}],28:[function(t,r,e){function n(t){return function(r){var e=r.reserve(1);r.buffer[e]=t}}for(var i=e.uint8=new Array(256),o=0;o<=255;o++)i[o]=n(o)},{}],29:[function(t,r,e){(function(r){\"use strict\";function n(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&\"function\"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(t){return!1}}function i(){return Buffer.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function o(t,r){if(i()<r)throw new RangeError(\"Invalid typed array length\");return Buffer.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(r),t.__proto__=Buffer.prototype):(null===t&&(t=new Buffer(r)),t.length=r),t}function Buffer(t,r,e){if(!(Buffer.TYPED_ARRAY_SUPPORT||this instanceof Buffer))return new Buffer(t,r,e);if(\"number\"==typeof t){if(\"string\"==typeof r)throw new Error(\"If encoding is specified then the first argument must be a string\");return s(this,t)}return f(this,t,r,e)}function f(t,r,e,n){if(\"number\"==typeof r)throw new TypeError('\"value\" argument must not be a number');return\"undefined\"!=typeof ArrayBuffer&&r instanceof ArrayBuffer?l(t,r,e,n):\"string\"==typeof r?c(t,r,e):p(t,r)}function u(t){if(\"number\"!=typeof t)throw new TypeError('\"size\" argument must be a number');if(t<0)throw new RangeError('\"size\" argument must not be negative')}function a(t,r,e,n){return u(r),r<=0?o(t,r):void 0!==e?\"string\"==typeof n?o(t,r).fill(e,n):o(t,r).fill(e):o(t,r)}function s(t,r){if(u(r),t=o(t,r<0?0:0|d(r)),!Buffer.TYPED_ARRAY_SUPPORT)for(var e=0;e<r;++e)t[e]=0;return t}function c(t,r,e){if(\"string\"==typeof e&&\"\"!==e||(e=\"utf8\"),!Buffer.isEncoding(e))throw new TypeError('\"encoding\" must be a valid string encoding');var n=0|v(r,e);t=o(t,n);var i=t.write(r,e);return i!==n&&(t=t.slice(0,i)),t}function h(t,r){var e=r.length<0?0:0|d(r.length);t=o(t,e);for(var n=0;n<e;n+=1)t[n]=255&r[n];return t}function l(t,r,e,n){if(r.byteLength,e<0||r.byteLength<e)throw new RangeError(\"'offset' is out of bounds\");if(r.byteLength<e+(n||0))throw new RangeError(\"'length' is out of bounds\");return r=void 0===e&&void 0===n?new Uint8Array(r):void 0===n?new Uint8Array(r,e):new Uint8Array(r,e,n),Buffer.TYPED_ARRAY_SUPPORT?(t=r,t.__proto__=Buffer.prototype):t=h(t,r),t}function p(t,r){if(Buffer.isBuffer(r)){var e=0|d(r.length);return t=o(t,e),0===t.length?t:(r.copy(t,0,0,e),t)}if(r){if(\"undefined\"!=typeof ArrayBuffer&&r.buffer instanceof ArrayBuffer||\"length\"in r)return\"number\"!=typeof r.length||H(r.length)?o(t,0):h(t,r);if(\"Buffer\"===r.type&&Q(r.data))return h(t,r.data)}throw new TypeError(\"First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.\")}function d(t){if(t>=i())throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+i().toString(16)+\" bytes\");return 0|t}function y(t){return+t!=t&&(t=0),Buffer.alloc(+t)}function v(t,r){if(Buffer.isBuffer(t))return t.length;if(\"undefined\"!=typeof ArrayBuffer&&\"function\"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;\"string\"!=typeof t&&(t=\"\"+t);var e=t.length;if(0===e)return 0;for(var n=!1;;)switch(r){case\"ascii\":case\"latin1\":case\"binary\":return e;case\"utf8\":case\"utf-8\":case void 0:return q(t).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return 2*e;case\"hex\":return e>>>1;case\"base64\":return X(t).length;default:if(n)return q(t).length;r=(\"\"+r).toLowerCase(),n=!0}}function g(t,r,e){var n=!1;if((void 0===r||r<0)&&(r=0),r>this.length)return\"\";if((void 0===e||e>this.length)&&(e=this.length),e<=0)return\"\";if(e>>>=0,r>>>=0,e<=r)return\"\";for(t||(t=\"utf8\");;)switch(t){case\"hex\":return I(this,r,e);case\"utf8\":case\"utf-8\":return k(this,r,e);case\"ascii\":return T(this,r,e);case\"latin1\":case\"binary\":return S(this,r,e);case\"base64\":return R(this,r,e);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return Y(this,r,e);default:if(n)throw new TypeError(\"Unknown encoding: \"+t);t=(t+\"\").toLowerCase(),n=!0}}function b(t,r,e){var n=t[r];t[r]=t[e],t[e]=n}function w(t,r,e,n,i){if(0===t.length)return-1;if(\"string\"==typeof e?(n=e,e=0):e>2147483647?e=2147483647:e<-2147483648&&(e=-2147483648),e=+e,isNaN(e)&&(e=i?0:t.length-1),e<0&&(e=t.length+e),e>=t.length){if(i)return-1;e=t.length-1}else if(e<0){if(!i)return-1;e=0}if(\"string\"==typeof r&&(r=Buffer.from(r,n)),Buffer.isBuffer(r))return 0===r.length?-1:E(t,r,e,n,i);if(\"number\"==typeof r)return r=255&r,Buffer.TYPED_ARRAY_SUPPORT&&\"function\"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,r,e):Uint8Array.prototype.lastIndexOf.call(t,r,e):E(t,[r],e,n,i);throw new TypeError(\"val must be string, number or Buffer\")}function E(t,r,e,n,i){function o(t,r){return 1===f?t[r]:t.readUInt16BE(r*f)}var f=1,u=t.length,a=r.length;if(void 0!==n&&(n=String(n).toLowerCase(),\"ucs2\"===n||\"ucs-2\"===n||\"utf16le\"===n||\"utf-16le\"===n)){if(t.length<2||r.length<2)return-1;f=2,u/=2,a/=2,e/=2}var s;if(i){var c=-1;for(s=e;s<u;s++)if(o(t,s)===o(r,c===-1?0:s-c)){if(c===-1&&(c=s),s-c+1===a)return c*f}else c!==-1&&(s-=s-c),c=-1}else for(e+a>u&&(e=u-a),s=e;s>=0;s--){for(var h=!0,l=0;l<a;l++)if(o(t,s+l)!==o(r,l)){h=!1;break}if(h)return s}return-1}function A(t,r,e,n){e=Number(e)||0;var i=t.length-e;n?(n=Number(n),n>i&&(n=i)):n=i;var o=r.length;if(o%2!==0)throw new TypeError(\"Invalid hex string\");n>o/2&&(n=o/2);for(var f=0;f<n;++f){var u=parseInt(r.substr(2*f,2),16);if(isNaN(u))return f;t[e+f]=u}return f}function m(t,r,e,n){return G(q(r,t.length-e),t,e,n)}function x(t,r,e,n){return G(W(r),t,e,n)}function B(t,r,e,n){return x(t,r,e,n)}function U(t,r,e,n){return G(X(r),t,e,n)}function P(t,r,e,n){return G(J(r,t.length-e),t,e,n)}function R(t,r,e){return 0===r&&e===t.length?Z.fromByteArray(t):Z.fromByteArray(t.slice(r,e))}function k(t,r,e){e=Math.min(t.length,e);for(var n=[],i=r;i<e;){var o=t[i],f=null,u=o>239?4:o>223?3:o>191?2:1;if(i+u<=e){var a,s,c,h;switch(u){case 1:o<128&&(f=o);break;case 2:a=t[i+1],128===(192&a)&&(h=(31&o)<<6|63&a,h>127&&(f=h));break;case 3:a=t[i+1],s=t[i+2],128===(192&a)&&128===(192&s)&&(h=(15&o)<<12|(63&a)<<6|63&s,h>2047&&(h<55296||h>57343)&&(f=h));break;case 4:a=t[i+1],s=t[i+2],c=t[i+3],128===(192&a)&&128===(192&s)&&128===(192&c)&&(h=(15&o)<<18|(63&a)<<12|(63&s)<<6|63&c,h>65535&&h<1114112&&(f=h))}}null===f?(f=65533,u=1):f>65535&&(f-=65536,n.push(f>>>10&1023|55296),f=56320|1023&f),n.push(f),i+=u}return _(n)}function _(t){var r=t.length;if(r<=$)return String.fromCharCode.apply(String,t);for(var e=\"\",n=0;n<r;)e+=String.fromCharCode.apply(String,t.slice(n,n+=$));return e}function T(t,r,e){var n=\"\";e=Math.min(t.length,e);for(var i=r;i<e;++i)n+=String.fromCharCode(127&t[i]);return n}function S(t,r,e){var n=\"\";e=Math.min(t.length,e);for(var i=r;i<e;++i)n+=String.fromCharCode(t[i]);return n}function I(t,r,e){var n=t.length;(!r||r<0)&&(r=0),(!e||e<0||e>n)&&(e=n);for(var i=\"\",o=r;o<e;++o)i+=V(t[o]);return i}function Y(t,r,e){for(var n=t.slice(r,e),i=\"\",o=0;o<n.length;o+=2)i+=String.fromCharCode(n[o]+256*n[o+1]);return i}function C(t,r,e){if(t%1!==0||t<0)throw new RangeError(\"offset is not uint\");if(t+r>e)throw new RangeError(\"Trying to access beyond buffer length\")}function D(t,r,e,n,i,o){if(!Buffer.isBuffer(t))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(r>i||r<o)throw new RangeError('\"value\" argument is out of bounds');if(e+n>t.length)throw new RangeError(\"Index out of range\")}function O(t,r,e,n){r<0&&(r=65535+r+1);for(var i=0,o=Math.min(t.length-e,2);i<o;++i)t[e+i]=(r&255<<8*(n?i:1-i))>>>8*(n?i:1-i)}function L(t,r,e,n){r<0&&(r=4294967295+r+1);for(var i=0,o=Math.min(t.length-e,4);i<o;++i)t[e+i]=r>>>8*(n?i:3-i)&255}function M(t,r,e,n,i,o){if(e+n>t.length)throw new RangeError(\"Index out of range\");if(e<0)throw new RangeError(\"Index out of range\")}function N(t,r,e,n,i){return i||M(t,r,e,4,3.4028234663852886e38,-3.4028234663852886e38),K.write(t,r,e,n,23,4),e+4}function F(t,r,e,n,i){return i||M(t,r,e,8,1.7976931348623157e308,-1.7976931348623157e308),K.write(t,r,e,n,52,8),e+8}function j(t){\n    if(t=z(t).replace(tt,\"\"),t.length<2)return\"\";for(;t.length%4!==0;)t+=\"=\";return t}function z(t){return t.trim?t.trim():t.replace(/^\\s+|\\s+$/g,\"\")}function V(t){return t<16?\"0\"+t.toString(16):t.toString(16)}function q(t,r){r=r||1/0;for(var e,n=t.length,i=null,o=[],f=0;f<n;++f){if(e=t.charCodeAt(f),e>55295&&e<57344){if(!i){if(e>56319){(r-=3)>-1&&o.push(239,191,189);continue}if(f+1===n){(r-=3)>-1&&o.push(239,191,189);continue}i=e;continue}if(e<56320){(r-=3)>-1&&o.push(239,191,189),i=e;continue}e=(i-55296<<10|e-56320)+65536}else i&&(r-=3)>-1&&o.push(239,191,189);if(i=null,e<128){if((r-=1)<0)break;o.push(e)}else if(e<2048){if((r-=2)<0)break;o.push(e>>6|192,63&e|128)}else if(e<65536){if((r-=3)<0)break;o.push(e>>12|224,e>>6&63|128,63&e|128)}else{if(!(e<1114112))throw new Error(\"Invalid code point\");if((r-=4)<0)break;o.push(e>>18|240,e>>12&63|128,e>>6&63|128,63&e|128)}}return o}function W(t){for(var r=[],e=0;e<t.length;++e)r.push(255&t.charCodeAt(e));return r}function J(t,r){for(var e,n,i,o=[],f=0;f<t.length&&!((r-=2)<0);++f)e=t.charCodeAt(f),n=e>>8,i=e%256,o.push(i),o.push(n);return o}function X(t){return Z.toByteArray(j(t))}function G(t,r,e,n){for(var i=0;i<n&&!(i+e>=r.length||i>=t.length);++i)r[i+e]=t[i];return i}function H(t){return t!==t}var Z=t(\"base64-js\"),K=t(\"ieee754\"),Q=t(\"isarray\");e.Buffer=Buffer,e.SlowBuffer=y,e.INSPECT_MAX_BYTES=50,Buffer.TYPED_ARRAY_SUPPORT=void 0!==r.TYPED_ARRAY_SUPPORT?r.TYPED_ARRAY_SUPPORT:n(),e.kMaxLength=i(),Buffer.poolSize=8192,Buffer._augment=function(t){return t.__proto__=Buffer.prototype,t},Buffer.from=function(t,r,e){return f(null,t,r,e)},Buffer.TYPED_ARRAY_SUPPORT&&(Buffer.prototype.__proto__=Uint8Array.prototype,Buffer.__proto__=Uint8Array,\"undefined\"!=typeof Symbol&&Symbol.species&&Buffer[Symbol.species]===Buffer&&Object.defineProperty(Buffer,Symbol.species,{value:null,configurable:!0})),Buffer.alloc=function(t,r,e){return a(null,t,r,e)},Buffer.allocUnsafe=function(t){return s(null,t)},Buffer.allocUnsafeSlow=function(t){return s(null,t)},Buffer.isBuffer=function(t){return!(null==t||!t._isBuffer)},Buffer.compare=function(t,r){if(!Buffer.isBuffer(t)||!Buffer.isBuffer(r))throw new TypeError(\"Arguments must be Buffers\");if(t===r)return 0;for(var e=t.length,n=r.length,i=0,o=Math.min(e,n);i<o;++i)if(t[i]!==r[i]){e=t[i],n=r[i];break}return e<n?-1:n<e?1:0},Buffer.isEncoding=function(t){switch(String(t).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},Buffer.concat=function(t,r){if(!Q(t))throw new TypeError('\"list\" argument must be an Array of Buffers');if(0===t.length)return Buffer.alloc(0);var e;if(void 0===r)for(r=0,e=0;e<t.length;++e)r+=t[e].length;var n=Buffer.allocUnsafe(r),i=0;for(e=0;e<t.length;++e){var o=t[e];if(!Buffer.isBuffer(o))throw new TypeError('\"list\" argument must be an Array of Buffers');o.copy(n,i),i+=o.length}return n},Buffer.byteLength=v,Buffer.prototype._isBuffer=!0,Buffer.prototype.swap16=function(){var t=this.length;if(t%2!==0)throw new RangeError(\"Buffer size must be a multiple of 16-bits\");for(var r=0;r<t;r+=2)b(this,r,r+1);return this},Buffer.prototype.swap32=function(){var t=this.length;if(t%4!==0)throw new RangeError(\"Buffer size must be a multiple of 32-bits\");for(var r=0;r<t;r+=4)b(this,r,r+3),b(this,r+1,r+2);return this},Buffer.prototype.swap64=function(){var t=this.length;if(t%8!==0)throw new RangeError(\"Buffer size must be a multiple of 64-bits\");for(var r=0;r<t;r+=8)b(this,r,r+7),b(this,r+1,r+6),b(this,r+2,r+5),b(this,r+3,r+4);return this},Buffer.prototype.toString=function(){var t=0|this.length;return 0===t?\"\":0===arguments.length?k(this,0,t):g.apply(this,arguments)},Buffer.prototype.equals=function(t){if(!Buffer.isBuffer(t))throw new TypeError(\"Argument must be a Buffer\");return this===t||0===Buffer.compare(this,t)},Buffer.prototype.inspect=function(){var t=\"\",r=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString(\"hex\",0,r).match(/.{2}/g).join(\" \"),this.length>r&&(t+=\" ... \")),\"<Buffer \"+t+\">\"},Buffer.prototype.compare=function(t,r,e,n,i){if(!Buffer.isBuffer(t))throw new TypeError(\"Argument must be a Buffer\");if(void 0===r&&(r=0),void 0===e&&(e=t?t.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),r<0||e>t.length||n<0||i>this.length)throw new RangeError(\"out of range index\");if(n>=i&&r>=e)return 0;if(n>=i)return-1;if(r>=e)return 1;if(r>>>=0,e>>>=0,n>>>=0,i>>>=0,this===t)return 0;for(var o=i-n,f=e-r,u=Math.min(o,f),a=this.slice(n,i),s=t.slice(r,e),c=0;c<u;++c)if(a[c]!==s[c]){o=a[c],f=s[c];break}return o<f?-1:f<o?1:0},Buffer.prototype.includes=function(t,r,e){return this.indexOf(t,r,e)!==-1},Buffer.prototype.indexOf=function(t,r,e){return w(this,t,r,e,!0)},Buffer.prototype.lastIndexOf=function(t,r,e){return w(this,t,r,e,!1)},Buffer.prototype.write=function(t,r,e,n){if(void 0===r)n=\"utf8\",e=this.length,r=0;else if(void 0===e&&\"string\"==typeof r)n=r,e=this.length,r=0;else{if(!isFinite(r))throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");r=0|r,isFinite(e)?(e=0|e,void 0===n&&(n=\"utf8\")):(n=e,e=void 0)}var i=this.length-r;if((void 0===e||e>i)&&(e=i),t.length>0&&(e<0||r<0)||r>this.length)throw new RangeError(\"Attempt to write outside buffer bounds\");n||(n=\"utf8\");for(var o=!1;;)switch(n){case\"hex\":return A(this,t,r,e);case\"utf8\":case\"utf-8\":return m(this,t,r,e);case\"ascii\":return x(this,t,r,e);case\"latin1\":case\"binary\":return B(this,t,r,e);case\"base64\":return U(this,t,r,e);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return P(this,t,r,e);default:if(o)throw new TypeError(\"Unknown encoding: \"+n);n=(\"\"+n).toLowerCase(),o=!0}},Buffer.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};var $=4096;Buffer.prototype.slice=function(t,r){var e=this.length;t=~~t,r=void 0===r?e:~~r,t<0?(t+=e,t<0&&(t=0)):t>e&&(t=e),r<0?(r+=e,r<0&&(r=0)):r>e&&(r=e),r<t&&(r=t);var n;if(Buffer.TYPED_ARRAY_SUPPORT)n=this.subarray(t,r),n.__proto__=Buffer.prototype;else{var i=r-t;n=new Buffer(i,void 0);for(var o=0;o<i;++o)n[o]=this[o+t]}return n},Buffer.prototype.readUIntLE=function(t,r,e){t=0|t,r=0|r,e||C(t,r,this.length);for(var n=this[t],i=1,o=0;++o<r&&(i*=256);)n+=this[t+o]*i;return n},Buffer.prototype.readUIntBE=function(t,r,e){t=0|t,r=0|r,e||C(t,r,this.length);for(var n=this[t+--r],i=1;r>0&&(i*=256);)n+=this[t+--r]*i;return n},Buffer.prototype.readUInt8=function(t,r){return r||C(t,1,this.length),this[t]},Buffer.prototype.readUInt16LE=function(t,r){return r||C(t,2,this.length),this[t]|this[t+1]<<8},Buffer.prototype.readUInt16BE=function(t,r){return r||C(t,2,this.length),this[t]<<8|this[t+1]},Buffer.prototype.readUInt32LE=function(t,r){return r||C(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},Buffer.prototype.readUInt32BE=function(t,r){return r||C(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},Buffer.prototype.readIntLE=function(t,r,e){t=0|t,r=0|r,e||C(t,r,this.length);for(var n=this[t],i=1,o=0;++o<r&&(i*=256);)n+=this[t+o]*i;return i*=128,n>=i&&(n-=Math.pow(2,8*r)),n},Buffer.prototype.readIntBE=function(t,r,e){t=0|t,r=0|r,e||C(t,r,this.length);for(var n=r,i=1,o=this[t+--n];n>0&&(i*=256);)o+=this[t+--n]*i;return i*=128,o>=i&&(o-=Math.pow(2,8*r)),o},Buffer.prototype.readInt8=function(t,r){return r||C(t,1,this.length),128&this[t]?(255-this[t]+1)*-1:this[t]},Buffer.prototype.readInt16LE=function(t,r){r||C(t,2,this.length);var e=this[t]|this[t+1]<<8;return 32768&e?4294901760|e:e},Buffer.prototype.readInt16BE=function(t,r){r||C(t,2,this.length);var e=this[t+1]|this[t]<<8;return 32768&e?4294901760|e:e},Buffer.prototype.readInt32LE=function(t,r){return r||C(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},Buffer.prototype.readInt32BE=function(t,r){return r||C(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},Buffer.prototype.readFloatLE=function(t,r){return r||C(t,4,this.length),K.read(this,t,!0,23,4)},Buffer.prototype.readFloatBE=function(t,r){return r||C(t,4,this.length),K.read(this,t,!1,23,4)},Buffer.prototype.readDoubleLE=function(t,r){return r||C(t,8,this.length),K.read(this,t,!0,52,8)},Buffer.prototype.readDoubleBE=function(t,r){return r||C(t,8,this.length),K.read(this,t,!1,52,8)},Buffer.prototype.writeUIntLE=function(t,r,e,n){if(t=+t,r=0|r,e=0|e,!n){var i=Math.pow(2,8*e)-1;D(this,t,r,e,i,0)}var o=1,f=0;for(this[r]=255&t;++f<e&&(o*=256);)this[r+f]=t/o&255;return r+e},Buffer.prototype.writeUIntBE=function(t,r,e,n){if(t=+t,r=0|r,e=0|e,!n){var i=Math.pow(2,8*e)-1;D(this,t,r,e,i,0)}var o=e-1,f=1;for(this[r+o]=255&t;--o>=0&&(f*=256);)this[r+o]=t/f&255;return r+e},Buffer.prototype.writeUInt8=function(t,r,e){return t=+t,r=0|r,e||D(this,t,r,1,255,0),Buffer.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[r]=255&t,r+1},Buffer.prototype.writeUInt16LE=function(t,r,e){return t=+t,r=0|r,e||D(this,t,r,2,65535,0),Buffer.TYPED_ARRAY_SUPPORT?(this[r]=255&t,this[r+1]=t>>>8):O(this,t,r,!0),r+2},Buffer.prototype.writeUInt16BE=function(t,r,e){return t=+t,r=0|r,e||D(this,t,r,2,65535,0),Buffer.TYPED_ARRAY_SUPPORT?(this[r]=t>>>8,this[r+1]=255&t):O(this,t,r,!1),r+2},Buffer.prototype.writeUInt32LE=function(t,r,e){return t=+t,r=0|r,e||D(this,t,r,4,4294967295,0),Buffer.TYPED_ARRAY_SUPPORT?(this[r+3]=t>>>24,this[r+2]=t>>>16,this[r+1]=t>>>8,this[r]=255&t):L(this,t,r,!0),r+4},Buffer.prototype.writeUInt32BE=function(t,r,e){return t=+t,r=0|r,e||D(this,t,r,4,4294967295,0),Buffer.TYPED_ARRAY_SUPPORT?(this[r]=t>>>24,this[r+1]=t>>>16,this[r+2]=t>>>8,this[r+3]=255&t):L(this,t,r,!1),r+4},Buffer.prototype.writeIntLE=function(t,r,e,n){if(t=+t,r=0|r,!n){var i=Math.pow(2,8*e-1);D(this,t,r,e,i-1,-i)}var o=0,f=1,u=0;for(this[r]=255&t;++o<e&&(f*=256);)t<0&&0===u&&0!==this[r+o-1]&&(u=1),this[r+o]=(t/f>>0)-u&255;return r+e},Buffer.prototype.writeIntBE=function(t,r,e,n){if(t=+t,r=0|r,!n){var i=Math.pow(2,8*e-1);D(this,t,r,e,i-1,-i)}var o=e-1,f=1,u=0;for(this[r+o]=255&t;--o>=0&&(f*=256);)t<0&&0===u&&0!==this[r+o+1]&&(u=1),this[r+o]=(t/f>>0)-u&255;return r+e},Buffer.prototype.writeInt8=function(t,r,e){return t=+t,r=0|r,e||D(this,t,r,1,127,-128),Buffer.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[r]=255&t,r+1},Buffer.prototype.writeInt16LE=function(t,r,e){return t=+t,r=0|r,e||D(this,t,r,2,32767,-32768),Buffer.TYPED_ARRAY_SUPPORT?(this[r]=255&t,this[r+1]=t>>>8):O(this,t,r,!0),r+2},Buffer.prototype.writeInt16BE=function(t,r,e){return t=+t,r=0|r,e||D(this,t,r,2,32767,-32768),Buffer.TYPED_ARRAY_SUPPORT?(this[r]=t>>>8,this[r+1]=255&t):O(this,t,r,!1),r+2},Buffer.prototype.writeInt32LE=function(t,r,e){return t=+t,r=0|r,e||D(this,t,r,4,2147483647,-2147483648),Buffer.TYPED_ARRAY_SUPPORT?(this[r]=255&t,this[r+1]=t>>>8,this[r+2]=t>>>16,this[r+3]=t>>>24):L(this,t,r,!0),r+4},Buffer.prototype.writeInt32BE=function(t,r,e){return t=+t,r=0|r,e||D(this,t,r,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),Buffer.TYPED_ARRAY_SUPPORT?(this[r]=t>>>24,this[r+1]=t>>>16,this[r+2]=t>>>8,this[r+3]=255&t):L(this,t,r,!1),r+4},Buffer.prototype.writeFloatLE=function(t,r,e){return N(this,t,r,!0,e)},Buffer.prototype.writeFloatBE=function(t,r,e){return N(this,t,r,!1,e)},Buffer.prototype.writeDoubleLE=function(t,r,e){return F(this,t,r,!0,e)},Buffer.prototype.writeDoubleBE=function(t,r,e){return F(this,t,r,!1,e)},Buffer.prototype.copy=function(t,r,e,n){if(e||(e=0),n||0===n||(n=this.length),r>=t.length&&(r=t.length),r||(r=0),n>0&&n<e&&(n=e),n===e)return 0;if(0===t.length||0===this.length)return 0;if(r<0)throw new RangeError(\"targetStart out of bounds\");if(e<0||e>=this.length)throw new RangeError(\"sourceStart out of bounds\");if(n<0)throw new RangeError(\"sourceEnd out of bounds\");n>this.length&&(n=this.length),t.length-r<n-e&&(n=t.length-r+e);var i,o=n-e;if(this===t&&e<r&&r<n)for(i=o-1;i>=0;--i)t[i+r]=this[i+e];else if(o<1e3||!Buffer.TYPED_ARRAY_SUPPORT)for(i=0;i<o;++i)t[i+r]=this[i+e];else Uint8Array.prototype.set.call(t,this.subarray(e,e+o),r);return o},Buffer.prototype.fill=function(t,r,e,n){if(\"string\"==typeof t){if(\"string\"==typeof r?(n=r,r=0,e=this.length):\"string\"==typeof e&&(n=e,e=this.length),1===t.length){var i=t.charCodeAt(0);i<256&&(t=i)}if(void 0!==n&&\"string\"!=typeof n)throw new TypeError(\"encoding must be a string\");if(\"string\"==typeof n&&!Buffer.isEncoding(n))throw new TypeError(\"Unknown encoding: \"+n)}else\"number\"==typeof t&&(t=255&t);if(r<0||this.length<r||this.length<e)throw new RangeError(\"Out of range index\");if(e<=r)return this;r>>>=0,e=void 0===e?this.length:e>>>0,t||(t=0);var o;if(\"number\"==typeof t)for(o=r;o<e;++o)this[o]=t;else{var f=Buffer.isBuffer(t)?t:q(new Buffer(t,n).toString()),u=f.length;for(o=0;o<e-r;++o)this[o+r]=f[o%u]}return this};var tt=/[^+\\/0-9A-Za-z-_]/g}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{\"base64-js\":30,ieee754:32,isarray:34}],30:[function(t,r,e){\"use strict\";function n(t){var r=t.length;if(r%4>0)throw new Error(\"Invalid string. Length must be a multiple of 4\");return\"=\"===t[r-2]?2:\"=\"===t[r-1]?1:0}function i(t){return 3*t.length/4-n(t)}function o(t){var r,e,i,o,f,u,a=t.length;f=n(t),u=new h(3*a/4-f),i=f>0?a-4:a;var s=0;for(r=0,e=0;r<i;r+=4,e+=3)o=c[t.charCodeAt(r)]<<18|c[t.charCodeAt(r+1)]<<12|c[t.charCodeAt(r+2)]<<6|c[t.charCodeAt(r+3)],u[s++]=o>>16&255,u[s++]=o>>8&255,u[s++]=255&o;return 2===f?(o=c[t.charCodeAt(r)]<<2|c[t.charCodeAt(r+1)]>>4,u[s++]=255&o):1===f&&(o=c[t.charCodeAt(r)]<<10|c[t.charCodeAt(r+1)]<<4|c[t.charCodeAt(r+2)]>>2,u[s++]=o>>8&255,u[s++]=255&o),u}function f(t){return s[t>>18&63]+s[t>>12&63]+s[t>>6&63]+s[63&t]}function u(t,r,e){for(var n,i=[],o=r;o<e;o+=3)n=(t[o]<<16)+(t[o+1]<<8)+t[o+2],i.push(f(n));return i.join(\"\")}function a(t){for(var r,e=t.length,n=e%3,i=\"\",o=[],f=16383,a=0,c=e-n;a<c;a+=f)o.push(u(t,a,a+f>c?c:a+f));return 1===n?(r=t[e-1],i+=s[r>>2],i+=s[r<<4&63],i+=\"==\"):2===n&&(r=(t[e-2]<<8)+t[e-1],i+=s[r>>10],i+=s[r>>4&63],i+=s[r<<2&63],i+=\"=\"),o.push(i),o.join(\"\")}e.byteLength=i,e.toByteArray=o,e.fromByteArray=a;for(var s=[],c=[],h=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,l=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",p=0,d=l.length;p<d;++p)s[p]=l[p],c[l.charCodeAt(p)]=p;c[\"-\".charCodeAt(0)]=62,c[\"_\".charCodeAt(0)]=63},{}],31:[function(t,r,e){function n(){if(!(this instanceof n))return new n}!function(t){function e(t){for(var r in s)t[r]=s[r];return t}function n(t,r){return u(this,t).push(r),this}function i(t,r){function e(){o.call(n,t,e),r.apply(this,arguments)}var n=this;return e.originalListener=r,u(n,t).push(e),n}function o(t,r){function e(t){return t!==r&&t.originalListener!==r}var n,i=this;if(arguments.length){if(r){if(n=u(i,t,!0)){if(n=n.filter(e),!n.length)return o.call(i,t);i[a][t]=n}}else if(n=i[a],n&&(delete n[t],!Object.keys(n).length))return o.call(i)}else delete i[a];return i}function f(t,r){function e(t){t.call(o)}function n(t){t.call(o,r)}function i(t){t.apply(o,s)}var o=this,f=u(o,t,!0);if(!f)return!1;var a=arguments.length;if(1===a)f.forEach(e);else if(2===a)f.forEach(n);else{var s=Array.prototype.slice.call(arguments,1);f.forEach(i)}return!!f.length}function u(t,r,e){if(!e||t[a]){var n=t[a]||(t[a]={});return n[r]||(n[r]=[])}}\"undefined\"!=typeof r&&(r.exports=t);var a=\"listeners\",s={on:n,once:i,off:o,emit:f};e(t.prototype),t.mixin=e}(n)},{}],32:[function(t,r,e){e.read=function(t,r,e,n,i){var o,f,u=8*i-n-1,a=(1<<u)-1,s=a>>1,c=-7,h=e?i-1:0,l=e?-1:1,p=t[r+h];for(h+=l,o=p&(1<<-c)-1,p>>=-c,c+=u;c>0;o=256*o+t[r+h],h+=l,c-=8);for(f=o&(1<<-c)-1,o>>=-c,c+=n;c>0;f=256*f+t[r+h],h+=l,c-=8);if(0===o)o=1-s;else{if(o===a)return f?NaN:(p?-1:1)*(1/0);f+=Math.pow(2,n),o-=s}return(p?-1:1)*f*Math.pow(2,o-n)},e.write=function(t,r,e,n,i,o){var f,u,a,s=8*o-i-1,c=(1<<s)-1,h=c>>1,l=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,p=n?0:o-1,d=n?1:-1,y=r<0||0===r&&1/r<0?1:0;for(r=Math.abs(r),isNaN(r)||r===1/0?(u=isNaN(r)?1:0,f=c):(f=Math.floor(Math.log(r)/Math.LN2),r*(a=Math.pow(2,-f))<1&&(f--,a*=2),r+=f+h>=1?l/a:l*Math.pow(2,1-h),r*a>=2&&(f++,a/=2),f+h>=c?(u=0,f=c):f+h>=1?(u=(r*a-1)*Math.pow(2,i),f+=h):(u=r*Math.pow(2,h-1)*Math.pow(2,i),f=0));i>=8;t[e+p]=255&u,p+=d,u/=256,i-=8);for(f=f<<i|u,s+=i;s>0;t[e+p]=255&f,p+=d,f/=256,s-=8);t[e+p-d]|=128*y}},{}],33:[function(t,r,e){(function(Buffer){var t,r,n,i;!function(e){function o(t,r,n){function i(t,r,e,n){return this instanceof i?v(this,t,r,e,n):new i(t,r,e,n)}function o(t){return!(!t||!t[F])}function v(t,r,e,n,i){if(E&&A&&(r instanceof A&&(r=new E(r)),n instanceof A&&(n=new E(n))),!(r||e||n||g))return void(t.buffer=h(m,0));if(!s(r,e)){var o=g||Array;i=e,n=r,e=0,r=new o(8)}t.buffer=r,t.offset=e|=0,b!==typeof n&&(\"string\"==typeof n?x(r,e,n,i||10):s(n,i)?c(r,e,n,i):\"number\"==typeof i?(k(r,e+T,n),k(r,e+S,i)):n>0?O(r,e,n):n<0?L(r,e,n):c(r,e,m,0))}function x(t,r,e,n){var i=0,o=e.length,f=0,u=0;\"-\"===e[0]&&i++;for(var a=i;i<o;){var s=parseInt(e[i++],n);if(!(s>=0))break;u=u*n+s,f=f*n+Math.floor(u/B),u%=B}a&&(f=~f,u?u=B-u:f++),k(t,r+T,f),k(t,r+S,u)}function P(){var t=this.buffer,r=this.offset,e=_(t,r+T),i=_(t,r+S);return n||(e|=0),e?e*B+i:i}function R(t){var r=this.buffer,e=this.offset,i=_(r,e+T),o=_(r,e+S),f=\"\",u=!n&&2147483648&i;for(u&&(i=~i,o=B-o),t=t||10;;){var a=i%t*B+o;if(i=Math.floor(i/t),o=Math.floor(a/t),f=(a%t).toString(t)+f,!i&&!o)break}return u&&(f=\"-\"+f),f}function k(t,r,e){t[r+D]=255&e,e>>=8,t[r+C]=255&e,e>>=8,t[r+Y]=255&e,e>>=8,t[r+I]=255&e}function _(t,r){return t[r+I]*U+(t[r+Y]<<16)+(t[r+C]<<8)+t[r+D]}var T=r?0:4,S=r?4:0,I=r?0:3,Y=r?1:2,C=r?2:1,D=r?3:0,O=r?l:d,L=r?p:y,M=i.prototype,N=\"is\"+t,F=\"_\"+N;return M.buffer=void 0,M.offset=0,M[F]=!0,M.toNumber=P,M.toString=R,M.toJSON=P,M.toArray=f,w&&(M.toBuffer=u),E&&(M.toArrayBuffer=a),i[N]=o,e[t]=i,i}function f(t){var r=this.buffer,e=this.offset;return g=null,t!==!1&&0===e&&8===r.length&&x(r)?r:h(r,e)}function u(t){var r=this.buffer,e=this.offset;if(g=w,t!==!1&&0===e&&8===r.length&&Buffer.isBuffer(r))return r;var n=new w(8);return c(n,0,r,e),n}function a(t){var r=this.buffer,e=this.offset,n=r.buffer;if(g=E,t!==!1&&0===e&&n instanceof A&&8===n.byteLength)return n;var i=new E(8);return c(i,0,r,e),i.buffer}function s(t,r){var e=t&&t.length;return r|=0,e&&r+8<=e&&\"string\"!=typeof t[r]}function c(t,r,e,n){r|=0,n|=0;for(var i=0;i<8;i++)t[r++]=255&e[n++]}function h(t,r){return Array.prototype.slice.call(t,r,r+8)}function l(t,r,e){for(var n=r+8;n>r;)t[--n]=255&e,e/=256}function p(t,r,e){var n=r+8;for(e++;n>r;)t[--n]=255&-e^255,e/=256}function d(t,r,e){for(var n=r+8;r<n;)t[r++]=255&e,e/=256}function y(t,r,e){var n=r+8;for(e++;r<n;)t[r++]=255&-e^255,e/=256}function v(t){return!!t&&\"[object Array]\"==Object.prototype.toString.call(t)}var g,b=\"undefined\",w=b!==typeof Buffer&&Buffer,E=b!==typeof Uint8Array&&Uint8Array,A=b!==typeof ArrayBuffer&&ArrayBuffer,m=[0,0,0,0,0,0,0,0],x=Array.isArray||v,B=4294967296,U=16777216;t=o(\"Uint64BE\",!0,!0),r=o(\"Int64BE\",!0,!1),n=o(\"Uint64LE\",!1,!0),i=o(\"Int64LE\",!1,!1)}(\"object\"==typeof e&&\"string\"!=typeof e.nodeName?e:this||{})}).call(this,t(\"buffer\").Buffer)},{buffer:29}],34:[function(t,r,e){var n={}.toString;r.exports=Array.isArray||function(t){return\"[object Array]\"==n.call(t)}},{}]},{},[1])(1)});","var Uint64BE,Int64BE,Uint64LE,Int64LE;!function(r){function t(t,p,B){function E(r,t,n,f){return this instanceof E?function(r,t,n,f,e){y&&v&&(t instanceof v&&(t=new y(t)),f instanceof v&&(f=new y(f)));if(!(t||n||f||a))return void(r.buffer=u(h,0));if(!o(t,n)){var c=a||Array;e=n,f=t,n=0,t=new c(8)}if(r.buffer=t,r.offset=n|=0,s===typeof f)return;\"string\"==typeof f?function(r,t,n,f){var e=0,o=n.length,i=0,u=0;\"-\"===n[0]&&e++;var a=e;for(;e<o;){var s=parseInt(n[e++],f);if(!(s>=0))break;u=u*f+s,i=i*f+Math.floor(u/b),u%=b}a&&(i=~i,u?u=b-u:i++);A(r,t+I,i),A(r,t+L,u)}(t,n,f,e||10):o(f,e)?i(t,n,f,e):\"number\"==typeof e?(A(t,n+I,f),A(t,n+L,e)):f>0?m(t,n,f):f<0?x(t,n,f):i(t,n,h,0)}(this,r,t,n,f):new E(r,t,n,f)}function g(){var r=this.buffer,t=this.offset,n=U(r,t+I),f=U(r,t+L);return B||(n|=0),n?n*b+f:f}function A(r,t,n){r[t+j]=255&n,n>>=8,r[t+S]=255&n,n>>=8,r[t+d]=255&n,n>>=8,r[t+w]=255&n}function U(r,t){return r[t+w]*l+(r[t+d]<<16)+(r[t+S]<<8)+r[t+j]}var I=p?0:4,L=p?4:0,w=p?0:3,d=p?1:2,S=p?2:1,j=p?3:0,m=p?function(r,t,n){var f=t+8;for(;f>t;)r[--f]=255&n,n/=256}:function(r,t,n){var f=t+8;for(;t<f;)r[t++]=255&n,n/=256},x=p?function(r,t,n){var f=t+8;n++;for(;f>t;)r[--f]=255&-n^255,n/=256}:function(r,t,n){var f=t+8;n++;for(;t<f;)r[t++]=255&-n^255,n/=256},M=E.prototype,N=\"is\"+t,k=\"_\"+N;return M.buffer=void 0,M.offset=0,M[k]=!0,M.toNumber=g,M.toString=function(r){var t=this.buffer,n=this.offset,f=U(t,n+I),e=U(t,n+L),o=\"\",i=!B&&2147483648&f;for(i&&(f=~f,e=b-e),r=r||10;;){var u=f%r*b+e;if(f=Math.floor(f/r),e=Math.floor(u/r),o=(u%r).toString(r)+o,!f&&!e)break}return i&&(o=\"-\"+o),o},M.toJSON=g,M.toArray=n,c&&(M.toBuffer=f),y&&(M.toArrayBuffer=e),E[N]=function(r){return!(!r||!r[k])},r[t]=E,E}function n(r){var t=this.buffer,n=this.offset;return a=null,!1!==r&&0===n&&8===t.length&&p(t)?t:u(t,n)}function f(r){var t=this.buffer,n=this.offset;if(a=c,!1!==r&&0===n&&8===t.length&&Buffer.isBuffer(t))return t;var f=new c(8);return i(f,0,t,n),f}function e(r){var t=this.buffer,n=this.offset,f=t.buffer;if(a=y,!1!==r&&0===n&&f instanceof v&&8===f.byteLength)return f;var e=new y(8);return i(e,0,t,n),e.buffer}function o(r,t){var n=r&&r.length;return t|=0,n&&t+8<=n&&\"string\"!=typeof r[t]}function i(r,t,n,f){t|=0,f|=0;for(var e=0;e<8;e++)r[t++]=255&n[f++]}function u(r,t){return Array.prototype.slice.call(r,t,t+8)}var a,s=\"undefined\",c=s!==typeof Buffer&&Buffer,y=s!==typeof Uint8Array&&Uint8Array,v=s!==typeof ArrayBuffer&&ArrayBuffer,h=[0,0,0,0,0,0,0,0],p=Array.isArray||function(r){return!!r&&\"[object Array]\"==Object.prototype.toString.call(r)},b=4294967296,l=16777216;Uint64BE=t(\"Uint64BE\",!0,!0),Int64BE=t(\"Int64BE\",!0,!1),Uint64LE=t(\"Uint64LE\",!1,!0),Int64LE=t(\"Int64LE\",!1,!1)}(\"object\"==typeof exports&&\"string\"!=typeof exports.nodeName?exports:this||{});","'use strict'\n\nconst FPEvent = require('./FPEvent');\n\nclass FPProcessor {\n\n    constructor() {\n\n        FPEvent.assign(this);\n    }\n\n    service(data, cb) {\n\n        this.emit(data.method, data.payload, cb);\n    }\n\n    destroy() {\n\n        this.removeEvent();\n    }\n}\n\nmodule.exports = FPProcessor;","'use strict'\n\nconst FPConfig = require('./FPConfig');\n\nclass FPCallback {\n\n    constructor() {\n\n        this._cbMap = {};\n        this._exMap = {};\n\n        checkExpire.call(this);\n    }\n\n    addCb(key, cb, timeout) {\n\n        if (!this._cbMap.hasOwnProperty(key)) {\n\n            this._cbMap[key] = cb;\n        } \n\n        if (!timeout) {\n\n            timeout = FPConfig.SEND_TIMEOUT;\n        }\n\n        this._exMap[key] = timeout + Date.now();\n    }\n\n    removeCb(key) {\n\n        if (key) {\n\n            delayRemove.call(this, key);\n            return;\n        }\n\n        for (let key in this._cbMap) {\n\n            delayExec.call(this, key, new Error('timeout with closed!'));\n        }\n    }\n\n    execCb(key, data) {\n\n        delayExec.call(this, key, data);\n    }\n}\n\nfunction checkExpire() {\n\n    let self = this;\n\n    setInterval(function() {\n\n        for (let key in self._exMap) {\n\n            if (self._exMap[key] > Date.now()) {\n            \n                continue;\n            } \n\n            delayExec.call(self, key, new Error('timeout with expire'));\n        }\n    }, FPConfig.CHECK_CBS_INTERVAL);\n}\n\nfunction delayExec(key, data) {\n\n    let self = this;\n\n    setTimeout(function() {\n\n        cbExec.call(self, key, data);\n    }, 0);\n}\n\nfunction cbExec(key, data) {\n\n    if (this._cbMap.hasOwnProperty(key)) {\n    \n        let cb = this._cbMap[key];\n        cbRemove.call(this, key);\n        cb && cb(data);\n    }\n}\n\nfunction delayRemove(key) {\n\n    let self = this;\n\n    setTimeout(function() {\n\n        cbRemove.call(self, key);\n    }, 0);\n}\n\nfunction cbRemove(key) {\n\n    if (this._cbMap.hasOwnProperty(key)) {\n\n        delete this._cbMap[key];\n    }\n\n    if (this._exMap.hasOwnProperty(key)) {\n\n        delete this._exMap[key];\n    } \n}\n\nmodule.exports = FPCallback","'use strict'\n\nconst FPConfig = require('./FPConfig');\n\nclass FPPackage {\n\n    constructor() {}\n\n    buildPkgData(options) {\n\n        let data = {};\n\n        data.magic = options.magic || FPConfig.TCP_MAGIC;\n        data.version = options.version || 0;\n        data.flag = options.flag || 0;\n        data.mtype = options.mtype || 0;\n        data.ss = options.ss || 0;\n        data.method = options.method || null;\n        data.seq = options.seq || 0;\n        data.payload = options.payload || null;\n\n        if (data.payload) {\n\n            data.psize = FPConfig.BUFFER.byteLength(data.payload);\n        }\n\n        if (data.method) {\n\n            data.ss = FPConfig.BUFFER.byteLength(data.method);\n        }\n\n        data.wpos = 0;\n        return data;\n    }\n\n    cbKey(data) {\n\n        return data.magic + '_' + data.seq;\n    }\n\n    isHTTP(data) {\n\n        return FPConfig.HTTP_MAGIC.equals(data.magic);\n    }\n\n    isTCP(data) {\n\n        return FPConfig.TCP_MAGIC.equals(data.magic);\n    }\n\n    isMsgPack(data) {\n\n        return 1 == data.flag;\n    }\n\n    isJson(data) {\n\n        return 0 == data.flag;    \n    }\n\n    isOneWay(data) {\n\n        return 0 == data.mtype;\n    }\n\n    isTwoWay(data) {\n\n        return 1 == data.mtype;\n    }\n\n    isQuest(data) {\n\n        return this.isTwoWay(data) || this.isOneWay(data);\n    }\n\n    isAnswer(data) {\n\n        return 2 == data.mtype;\n    }\n\n    isSupportPack(data) {\n\n        return this.isMsgPack(data) != this.isJson(data);\n    }\n\n    enCode(data) {\n        \n        if (this.isOneWay(data)) {\n\n            return this.enCodeOneway(data);\n        }\n\n        if (this.isTwoWay(data)) {\n\n            return this.enCodeTwoway(data);\n        }\n\n        if (this.isAnswer(data)) {\n\n            return this.enCodeAnswer(data);\n        }\n\n        return null;\n    }\n\n    enCodeOneway(data) {\n\n        let buf = buildHeader.call(this, data, 12 + data.ss + data.psize);\n\n        data.wpos = buf.writeUInt8(data.ss, data.wpos);\n        data.wpos = buf.writeUInt32LE(data.psize, data.wpos);\n\n        let mbuf = FPConfig.BUFFER.from(data.method)\n        data.wpos += mbuf.copy(buf, data.wpos, 0);\n\n        if (this.isJson(data)) {\n\n            let pbuf = FPConfig.BUFFER.from(data.payload)\n            data.wpos += pbuf.copy(buf, data.wpos, 0);\n        }\n\n        if (this.isMsgPack(data)) {\n\n            this.wpos += this.payload.copy(buf, this.wpos, 0);\n        }\n\n        return buf;\n    }\n\n    enCodeTwoway(data) {\n\n        let buf = buildHeader.call(this, data, 16 + data.ss + data.psize);\n\n        data.wpos = buf.writeUInt8(data.ss, data.wpos);\n        data.wpos = buf.writeUInt32LE(data.psize, data.wpos);\n        data.wpos = buf.writeUInt32LE(data.seq, data.wpos);\n\n        let mbuf = FPConfig.BUFFER.from(data.method)\n        data.wpos += mbuf.copy(buf, data.wpos, 0);\n\n        if (this.isJson(data)) {\n\n            let pbuf = FPConfig.BUFFER.from(data.payload)\n            data.wpos += pbuf.copy(buf, data.wpos, 0);\n        }\n\n        if (this.isMsgPack(data)) {\n\n            data.wpos += data.payload.copy(buf, data.wpos, 0);\n        }\n\n        return buf; \n    }\n\n    enCodeAnswer(data) {\n\n        let buf = buildHeader.call(this, data, 16 + data.psize);\n\n        data.wpos = buf.writeUInt8(data.ss, data.wpos);\n        data.wpos = buf.writeUInt32LE(data.psize, data.wpos);\n        data.wpos = buf.writeUInt32LE(data.seq, data.wpos);\n\n        if (this.isJson(data)) {\n\n            let pbuf = FPConfig.BUFFER.from(data.payload)\n            data.wpos += pbuf.copy(buf, data.wpos, 0);\n        }\n\n        if (this.isMsgPack(data)) {\n\n            data.wpos += data.payload.copy(buf, data.wpos, 0);\n        }\n\n        return buf;\n    }\n\n    peekHead(buf) {\n\n        let peek = {};\n        let pos = 0;\n        let mbuf = FPConfig.BUFFER.allocUnsafe(4);\n\n        pos += buf.copy(mbuf, 0, pos, pos + 4);\n        peek.magic = mbuf;\n\n        mbuf = FPConfig.BUFFER.allocUnsafe(1);\n        pos += buf.copy(mbuf, 0, pos, pos + 1);\n        peek.version = FPConfig.FPNN_VERSION.indexOf(mbuf);\n\n        pos += buf.copy(mbuf, 0, pos, pos + 1);\n        peek.flag = FPConfig.FP_FLAG.indexOf(mbuf);\n\n        pos += buf.copy(mbuf, 0, pos, pos + 1);\n        peek.mtype = FPConfig.FP_MESSAGE_TYPE.indexOf(mbuf);\n\n        pos += buf.copy(mbuf, 0, pos, pos + 1);\n        peek.ss = mbuf.readUInt8(0);\n\n        peek.psize = buf.readUInt32LE(pos);\n        peek.wpos = pos + 4;\n        \n        return peek;\n    }\n\n    deCode(buf) {\n\n        let data = this.peekHead(buf);\n\n        if (this.isOneWay(data)) {\n\n            this.deCodeOneWay(buf, data);\n        }\n\n        if (this.isTwoWay(data)) {\n\n            this.deCodeTwoWay(buf, data);\n        }\n\n        if (this.isAnswer(data)) {\n\n            this.deCodeAnswer(buf, data);\n        }\n\n        return data;\n    }\n\n    deCodeOneWay(buf, data) {\n\n        if (buf.length != 12 + data.ss + data.psize) {\n\n            data = null;\n            return;\n        }\n\n        let mbuf = FPConfig.BUFFER.allocUnsafe(data.ss);\n        data.wpos += buf.copy(mbuf, 0, data.wpos, data.wpos + data.ss);\n\n        data.method = mbuf.toString();\n\n        let pbuf = FPConfig.BUFFER.allocUnsafe(data.psize);\n        data.wpos += buf.copy(pbuf, 0, data.wpos);\n\n        if (this.isJson(data)) {\n\n            data.payload = pbuf.toString();\n        }\n\n        if (this.isMsgPack(data)) {\n\n            data.payload = pbuf;\n        }\n    }\n\n    deCodeTwoWay(buf, data) {\n\n        if (buf.length != 16 + data.ss + data.psize) {\n\n            data = null;\n            return;\n        }\n\n        data.seq = buf.readUInt32LE(data.wpos);\n        data.wpos += 4;\n\n        let mbuf = FPConfig.BUFFER.allocUnsafe(data.ss);\n        data.wpos += buf.copy(mbuf, 0, data.wpos, data.wpos + data.ss);\n\n        data.method = mbuf.toString();\n\n        let pbuf = FPConfig.BUFFER.allocUnsafe(data.psize);\n        data.wpos += buf.copy(pbuf, 0, data.wpos);\n\n        if (this.isJson(data)) {\n\n            data.payload = pbuf.toString();\n        }\n\n        if (this.isMsgPack(data)) {\n\n            data.payload = pbuf;\n        }\n    }\n\n    deCodeAnswer(buf, data) {\n\n        if (buf.length != 16 + data.psize) {\n\n            data = null;\n            return;\n        }\n\n        data.seq = buf.readUInt32LE(data.wpos);\n        data.wpos += 4;\n\n        let pbuf = FPConfig.BUFFER.allocUnsafe(data.psize);\n        data.wpos += buf.copy(pbuf, 0, data.wpos);\n\n        if (this.isJson(data)) {\n\n            data.payload = pbuf.toString();\n        }\n\n        if (this.isMsgPack(data)) {\n\n            data.payload = pbuf;\n        }\n    }\n}\n\nfunction buildHeader(data, size) {\n\n    let buf = FPConfig.BUFFER.allocUnsafe(size);\n\n    if (this.isHTTP(data)) {\n\n        data.wpos += FPConfig.HTTP_MAGIC.copy(buf, data.wpos, 0);\n    }\n\n    if (this.isTCP(data)) {\n\n        data.wpos += FPConfig.TCP_MAGIC.copy(buf, data.wpos, 0);\n    }\n\n    data.wpos += FPConfig.FPNN_VERSION.copy(buf, data.wpos, data.version, data.version + 1);\n\n    if (this.isJson(data)) {\n\n        data.wpos += FPConfig.FP_FLAG.copy(buf, data.wpos, data.flag, data.flag + 1);\n    }\n\n    if (this.isMsgPack(data)) {\n\n        data.wpos += FPConfig.FP_FLAG.copy(buf, data.wpos, data.flag, data.flag + 1);\n    }\n\n    data.wpos += FPConfig.FP_MESSAGE_TYPE.copy(buf, data.wpos, data.mtype, data.mtype + 1);\n    return buf;\n}\n\nmodule.exports = FPPackage;","'use strict'\n\nclass BrowserImpl {\n\n\tconstructor() {\n\n\t\tthis._socket = null;\n\t}\n\n\topen(endpoint) {\n\n        let self = this;\n\n\t\ttry {\n\n            this._socket = new WebSocket(endpoint);\n        } catch (err) {\n\n            this.emit('error', err);\n            return;\n        }\n\n        this._socket.binaryType = 'arraybuffer';\n\n        this._socket.onopen = function(evt) { \n\n            self.emit('open');\n        };\n          \n        this._socket.onmessage = function(evt) {\n\n            self.emit('message', evt.data);\n        };\n          \n        this._socket.onclose = function(evt) {\n\n            self.emit('close');\n        };      \n\n        this._socket.onerror = function(evt) {\n\n            self.emit('error', evt);\n        };\n\t}\n\n\tsend(data) {\n\n\t\ttry {\n\n            this._socket.send(data);\n        } catch (err) {\n\n            this.emit('error', err);\n            return;\n        }\n\t}\n\n\tclose() {\n\n\t\tif (this._socket) {\n\n\t\t\tthis._socket.close();\n\t\t}\n\t}\n\n\tget isOpen() {\n\n\t\tif (this._socket) {\n\n\t        return this._socket.readyState == WebSocket.OPEN;\n        }\n\n        return false;\n\t}\n\n\tget isConnecting() {\n\n\t\tif (this._socket) {\n\n\t        return this._socket.readyState == WebSocket.CONNECTING;\n        }\n\n        return false;\n\t}\n}\n\nmodule.exports = BrowserImpl;\n","'use strict'\n\nconst FPConfig = require('./FPConfig');\nconst FPEvent = require('./FPEvent');\nconst PlatFormImpl = require('./platform/BrowserImpl');\n\nclass FPSocket {\n\n    constructor(options) {\n\n        FPEvent.assign(this);\n\n        this._endpoint = options.endpoint || null;\n        this._timeout = options.connectionTimeout || 10 * 1000;\n        this._platform = options.platformImpl || new PlatFormImpl();\n\n        this._connectTimeout = 0;\n        this._queue = [];\n\n        let self = this;\n        FPEvent.assign(this._platform);\n\n        this._platform.on('open', function() {\n\n            onConnect.call(self);\n        });\n\n        this._platform.on('message', function(data) {\n\n            onData.call(self, data);\n        });\n\n        this._platform.on('close', function() {\n\n            onClose.call(self);\n        });\n\n        this._platform.on('error', function(err) {\n\n            onError.call(self, err);\n        });\n    }\n\n    get endpoint() { \n\n        return this._endpoint; \n    }\n\n    write(data) {\n\n        if (data) {\n\n            if (Object.prototype.toString.call(data) === '[object String]') {\n\n                this._queue.push(data);\n            } else {\n\n                let arrayBuffer = data.buffer.slice(data.byteOffset, data.byteOffset + data.byteLength);\n                this._queue.push(arrayBuffer);\n            }\n        }\n\n        writeSocket.call(this);\n    }\n\n    close(err) {\n\n        if (err) {\n\n            this.emit('error', err);\n        }\n\n        this._platform.close();\n    }\n\n    open() {\n\n        if (this.isConnecting || this.isOpen || !this._endpoint) {\n\n            this.emit('error', new Error('has connected or worng endpoint!'));\n            return;\n        }\n\n        let self = this;\n\n        if (this._connectTimeout) {\n\n            clearTimeout(this._connectTimeout);\n            this._connectTimeout = 0;\n        }\n\n        this._connectTimeout = setTimeout(function() {\n\n            let err = new Error('connect timeout!');\n\n            if (self.isOpen) {\n\n                self.close(err);\n                return;\n            }\n\n            if (self.isConnecting) {\n\n                self.close(err);\n                onClose.call(self);\n                return;\n            } \n\n            onError.call(self, err);\n            onClose.call(self);\n        }, this._timeout);\n\n        this._platform.open(this._endpoint);\n    }\n\n    get isOpen() {\n\n        return this._platform.isOpen;\n    }\n\n    get isConnecting() {\n\n        return this._platform.isConnecting;\n    }\n\n    destroy() {\n\n        this.removeEvent();\n        this.close();\n\n        this._platform.removeEvent();\n\n        onClose.call(this);\n    }\n}\n\nfunction writeSocket() {\n\n    if (!this.isOpen) {\n\n        return;\n    }\n\n    while (this._queue.length) {\n\n        this._platform.send(this._queue.shift());\n    }\n}\n\nfunction onData(chunk) {\n\n    this.emit('data', chunk);\n}\n\nfunction onConnect() {\n    \n    if (this._connectTimeout) {\n\n        clearTimeout(this._connectTimeout);\n        this._connectTimeout = 0;\n    }\n\n    writeSocket.call(this);\n    this.emit('connect');\n}\n\nfunction onClose() {\n\n    if (this._connectTimeout) {\n\n        clearTimeout(this._connectTimeout);\n        this._connectTimeout = 0;\n    }\n\n    this._queue = [];\n    this.emit('close');\n}\n\nfunction onError(err) {\n\n    this.emit('error', err);\n}\n\nmodule.exports = FPSocket;","'use strict'\n\nconst FPConfig = require('./FPConfig');\nconst FPEvent = require('./FPEvent');\nconst FPSocket = require('./FPSocket');\nconst FPPackage = require('./FPPackage');\nconst FPCallback = require('./FPCallback');\nconst FPProcessor = require('./FPProcessor');\n\nclass FPClient {\n\n    constructor(options) {\n\n        FPEvent.assign(this);\n\n        this._autoReconnect = options.autoReconnect || false;\n        this._proxy = options.proxy || null;\n\n        if (this._proxy) {\n            \n            this._proxy.targetEndpoint = options.endpoint;\n            options.endpoint = this._proxy.endpoint;\n        }\n\n        this._conn = new FPSocket(options);\n\n        let self = this;\n\n        this._conn.on('connect', function() {\n\n            onConnect.call(self);\n        });\n\n        this._conn.on('close', function() {\n\n            onClose.call(self);\n        });\n\n        this._conn.on('data', function(chunk) {\n\n            onData.call(self, chunk);\n        });\n\n        this._conn.on('error', function(err) {\n\n            onError.call(self, err);\n        });\n\n        this._pkg = new FPPackage();\n        this._cbs = new FPCallback();\n        this._psr = new FPProcessor();\n\n        this._seq = 0;\n        this._wpos = 0;\n        this._peekData = null;\n\n        this._readID = 0;\n        this._reconnectID = 0;\n        this._buffer = FPConfig.BUFFER.allocUnsafe(FPConfig.READ_BUFFER_LEN);\n    }\n\n    get processor() {\n\n        return this._psr;\n    }\n\n    set processor(value) {\n\n        return this._psr = value;\n    }\n\n    connect() {\n\n        if (this.hasConnect) {\n\n            this._conn.close(new Error('has connected!'));\n            return;\n        }\n\n        this._conn.open();\n    }\n\n    sendQuest(options, callback, timeout) {\n\n        let data = {};\n\n        data.magic = options.magic || FPConfig.TCP_MAGIC;\n        data.version = options.version || 1;\n        data.flag = options.flag || 0;\n        data.mtype = options.hasOwnProperty('mtype') ? options.mtype : 1;\n\n        data.method = options.method;\n        data.seq = (!options.hasOwnProperty('seq')) ? ++this._seq : options.seq;\n        data.payload = options.payload;\n\n        data = this._pkg.buildPkgData(data);\n\n        if (callback) {\n\n            this._cbs.addCb(this._pkg.cbKey(data), callback, timeout);\n        }\n\n        let buf = this._pkg.enCode(data);\n\n        if (this._proxy) {\n\n            buf = this._proxy.buildProxyData(buf);\n        }\n        \n        this._conn.write(buf);\n    }\n\n    sendNotify(options) {\n\n        let data = {};\n\n        data.magic = options.magic || FPConfig.TCP_MAGIC;\n        data.version = options.version || 1;\n        data.flag = options.flag || 0;\n        data.mtype = options.mtype || 0;\n\n        data.method = options.method;\n        data.payload = options.payload;\n\n        data = this._pkg.buildPkgData(data);\n        let buf = this._pkg.enCode(data);\n\n        if (this._proxy) {\n\n            buf = this._proxy.buildProxyData(buf);\n        }\n\n        this._conn.write(buf);\n    }\n\n    close(err) {\n\n        if (err) {\n\n            onError.call(this, err);\n        }\n\n        this._conn.close();\n    }\n\n    get isOpen() {\n\n        return this._conn.isOpen;\n    }\n\n    get hasConnect() {\n\n        return this._conn.isOpen || this._conn.isConnecting;\n    }\n\n    destroy() {\n\n        this._autoReconnect = false;\n\n        this.removeEvent();\n\n        this._psr.destroy();\n        this._conn.destroy();\n        \n        onClose.call(this);\n    }\n}\n\nfunction onError(err) {\n    \n    this.emit('error', err);\n}\n\nfunction onConnect() {\n\n    if (this._reconnectID) {\n\n        clearTimeout(this._reconnectID);\n        this._reconnectID = 0;\n    }\n\n    this.emit('connect');\n}\n\nfunction onClose() {\n\n    if (this._readID) {\n\n        clearInterval(this._readID);\n        this._readID = 0;\n    }\n\n    if (this._reconnectID) {\n\n        clearTimeout(this._reconnectID);\n        this._reconnectID = 0;\n    }\n\n    this._seq = 0;\n    this._wpos = 0;\n    this._peekData = null;\n\n    this._cbs.removeCb();\n    this._buffer = FPConfig.BUFFER.allocUnsafe(FPConfig.READ_BUFFER_LEN);\n\n    this.emit('close');\n\n    if (this._autoReconnect) {\n\n        reConnect.call(this);\n    }\n}\n\nfunction reConnect() {\n\n    if (this._reconnectID) {\n\n        return;\n    }\n\n    let self = this;\n\n    this._reconnectID = setTimeout(function() {\n\n        self.connect();\n    }, 100);\n}\n\nfunction onData(chunk) {\n\n    chunk = FPConfig.BUFFER.from(chunk);\n\n    let len = this._wpos + chunk.length;\n\n    if (len > this._buffer.length) {\n\n        resizeBuffer.call(this, len, 2 * FPConfig.READ_BUFFER_LEN);\n    }\n\n    this._wpos += chunk.copy(this._buffer, this._wpos, 0);\n\n    if (!this._readID) {\n\n        let self = this;\n        this._readID = setInterval(function () {\n\n            readPeekData.call(self);\n        }, 0);\n    }\n}\n\nfunction resizeBuffer(len1, len2, offset=0) {\n\n    let len = Math.max(len1, len2);\n\n    let buf = FPConfig.BUFFER.allocUnsafe(len);\n    this._wpos = this._buffer.copy(buf, 0, offset, this._wpos);\n    this._buffer = buf;\n}\n\nfunction readPeekData () {\n\n    if (this._wpos < 12) {\n\n        return;\n    }\n\n    if (!this._peekData) {\n\n        this._peekData = peekHead.call(this, this._buffer);\n\n        if (!this._peekData) {\n\n            this.conn.close(new Error('worng package!'));\n            return;\n        }\n    }\n    \n    let diff = this._wpos - this._peekData.pkgLen;\n\n    if (diff < 0) {\n\n        return;\n    }\n\n    this._buffer.copy(this._peekData.buffer, 0, 0, this._peekData.pkgLen);\n\n    let data = this._pkg.deCode(this._peekData.buffer);\n\n    resizeBuffer.call(this, 2 * diff, FPConfig.READ_BUFFER_LEN, this._peekData.pkgLen);\n    delete this._peekData;\n    this._peekData = null;\n\n    if (this._pkg.isAnswer(data)) {\n\n        let cbkey = this._pkg.cbKey(data);\n        this._cbs.execCb(cbkey, data);\n    }\n\n    if (this._pkg.isQuest(data)) {\n\n        let self = this;\n        this._psr.service(data, function(payload, exception) {\n\n            sendAnswer.call(self, data.flag, data.seq, payload, exception);\n        });\n    }\n}\n\nfunction sendAnswer(flag, seq, payload, exception) {\n\n    exception = exception || false;\n\n    let options = {\n        flag: flag,\n        mtype: 2,\n        seq: seq,\n        ss: exception ? 1 : 0,\n        payload: payload,\n    };\n\n    this.sendQuest(options);\n}\n\nfunction peekHead(buf) {\n\n    let data = null;\n\n    if (buf.length >= 12) {\n\n        data = this._pkg.peekHead(buf);\n\n        if (!checkHead.call(this, data)) {\n\n            return null;\n        }\n\n        if (this._pkg.isOneWay(data)) {\n\n            data.pkgLen = 12 + data.ss + data.psize;\n        }\n\n        if (this._pkg.isTwoWay(data)) {\n\n            data.pkgLen = 16 + data.ss + data.psize;\n        }\n\n        if (this._pkg.isAnswer(data)) {\n\n            data.pkgLen = 16 + data.psize;\n        }\n\n        if (data.pkgLen > 0) {\n\n            data.buffer = FPConfig.BUFFER.allocUnsafe(data.pkgLen);\n        }\n    }\n\n    return data;\n}\n\nfunction checkHead(data) {\n\n    if (!FPConfig.TCP_MAGIC.equals(data.magic) && !FPConfig.HTTP_MAGIC.equals(data.magic)) {\n\n        return false;\n    }\n\n    if (data.version < 0 || data.version >= FPConfig.FPNN_VERSION.length) {\n\n        return false;\n    }\n\n    if (data.flag < 0 || data.flag >= FPConfig.FP_FLAG.length) {\n\n        return false;\n    }\n    \n    if (data.mtype < 0 || data.mtype >= FPConfig.FP_MESSAGE_TYPE.length) {\n\n        return false;\n    }\n\n    return true;\n}\n\nmodule.exports = FPClient;","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict'\n\nconst FPConfig = require('../fpnn/FPConfig');\nconst FPEvent = require('../fpnn/FPEvent');\nconst FPClient = require('../fpnn/FPClient');\nconst RTMConfig = require('./RTMConfig');\nconst RTMProcessor = require('./RTMProcessor');\nconst RTMProxy = require('./RTMProxy');\n\nclass RTMClient {\n\n    /**\n     * \n     * @param {object} options \n     * \n     * options:\n     * {string} options.dispatch\n     * {number} options.pid \n     * {Int64} options.uid\n     * {string} options.token\n     * {bool} options.autoReconnect \n     * {number} options.connectionTimeout \n     * {string} options.version\n     * {object<string, string>} options.attrs\n     * {bool} options.ssl\n     * {string} options.proxyEndpoint\n     */\n    constructor(options) {\n\n        FPEvent.assign(this);\n\n        this._dispatch = options.dispatch;\n        this._pid = options.pid;\n        this._uid = options.uid;\n        this._token = options.token;\n        this._version = options.version || '';\n        this._attrs = options.attrs;\n        this._ssl = options.ssl !== undefined ? options.ssl : true;\n        this._autoReconnect = options.autoReconnect !== undefined ? options.autoReconnect : true;\n        this._connectionTimeout = options.connectionTimeout || 30 * 1000;\n\n        if (this._ssl) {\n\n            this._proxyEndpoint = options.proxyEndpoint; \n        }\n\n        this._midSeq = 0;\n        this._saltSeq = 0;\n        this._endpoint = null;\n        this._ipv6 = false;\n\n        this._baseClient = null;\n        this._dispatchClient = null;\n        this._loginOptions = null; \n        this._reconnectTimeout = 0;\n\n        this._isClose = false;\n\n        this._msgOptions = {\n\n            codec: RTMConfig.MsgPack.createCodec({  \n\n                int64: true\n            }) \n        };\n\n        this._processor = new RTMProcessor();\n\n        if (this._proxyEndpoint) {\n\n            let endpoint = buildEndpoint.call(this, this._proxyEndpoint);\n            this._proxy = new RTMProxy(endpoint);\n            this._fileProxy = new RTMProxy(endpoint);\n        }\n    }\n\n    get msgOptions() {\n\n        return this._msgOptions;\n    }\n\n    get processor() {\n\n        return this._processor;\n    }\n\n    /**\n     * \n     * @param {string} endpoint\n     * @param {bool} ipv6 \n     */\n    login(endpoint, ipv6) {\n\n        this._endpoint = endpoint || null;\n        this._ipv6 = ipv6 || false;\n        this._isClose = false;\n\n        if (this._endpoint) {\n\n            connectRTMGate.call(this);\n            return;\n        }\n\n        let self = this;\n\n        getRTMGate.call(this, 'rtmGated', function(err, data) {\n\n            if (data) {\n                \n                self.login(data.endpoint, self._ipv6);\n            }\n\n            if (err) {\n\n                onClose.call(self, true);\n                self.emit('error', err);\n            }\n        }, this._connectionTimeout);\n    }\n\n    destroy() {\n\n        this.close();\n\n        this._midSeq = 0;\n        this._saltSeq = 0;\n\n        if (this._proxy) {\n\n            this._proxy = null;\n        }\n\n        if (this._processor) {\n\n            this._processor.destroy();\n            this._processor = null;\n        }\n\n        if (this._baseClient) {\n\n            this._baseClient.destroy();\n            this._baseClient = null;\n        }\n\n        if (this._dispatchClient) {\n\n            this._dispatchClient.destroy();\n            this._dispatchClient = null;\n        }\n\n        this.removeEvent();\n        onClose.call(this);\n    }\n\n    /**\n     *  \n     * rtmGate (2)\n     * \n     * @param {Int64} to \n     * @param {number} mtype \n     * @param {string} msg \n     * @param {string} attrs \n     * @param {Int64} mid    \n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {object<mid:Int64, error:Error>} err\n     * @param {object<mid:Int64, payload:object<mtime:Int64>>} data\n     */\n    sendMessage(to, mtype, msg, attrs, mid, timeout, callback) {\n        \n        if (!mid || mid.toString() == '0') {\n\n            mid = genMid.call(this);\n        }\n\n        let payload = {\n            to: to,\n            mid: mid,\n            mtype: mtype,\n            msg: msg,\n            attrs: attrs\n        };\n\n        let options = {\n            flag: 1,\n            method: 'sendmsg',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, function(err, data) {\n\n            if (err) {\n\n                callback && callback({ mid: payload.mid, error: err }, null);\n                return;\n            }\n\n            if (data.mtime !== undefined) {\n\n                data.mtime = new RTMConfig.Int64(data.mtime);\n            }\n\n            callback && callback(null, { mid: payload.mid, payload: data });\n        }, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (3)\n     * \n     * @param {Int64} gid\n     * @param {number} mtype \n     * @param {string} msg \n     * @param {string} attrs \n     * @param {Int64} mid    \n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {object<mid:Int64, error:Error>} err\n     * @param {object<mid:Int64, payload:object<mtime:Int64>>} data\n     */\n    sendGroupMessage(gid, mtype, msg, attrs, mid, timeout, callback) {\n        \n        if (!mid || mid.toString() == '0') {\n\n            mid = genMid.call(this);\n        }\n\n        let payload = {\n            gid: gid,\n            mid: mid || genMid.call(this),\n            mtype: mtype,\n            msg: msg,\n            attrs: attrs\n        };\n\n        let options = {\n            flag: 1,\n            method: 'sendgroupmsg',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, function(err, data) {\n\n            if (err) {\n\n                callback && callback({ mid: payload.mid, error: err }, null);\n                return;\n            }\n\n            if (data.mtime !== undefined) {\n\n                data.mtime = new RTMConfig.Int64(data.mtime);\n            }\n\n            callback && callback(null, { mid: payload.mid, payload: data });\n        }, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (4)\n     * \n     * @param {Int64} rid\n     * @param {number} mtype \n     * @param {string} msg \n     * @param {string} attrs \n     * @param {Int64} mid    \n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {object<mid:Int64, error:Error>} err\n     * @param {object<mid:Int64, payload:object<mtime:Int64>>} data\n     */\n    sendRoomMessage(rid, mtype, msg, attrs, mid, timeout, callback) {\n\n        if (!mid || mid.toString() == '0') {\n\n            mid = genMid.call(this);\n        }\n\n        let payload = {\n            rid: rid,\n            mid: mid || genMid.call(this),\n            mtype: mtype,\n            msg: msg,\n            attrs: attrs\n        };\n\n        let options = {\n            flag: 1,\n            method: 'sendroommsg',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, function(err, data) {\n\n            if (err) {\n\n                callback && callback({ mid: payload.mid, error: err }, null);\n                return;\n            }\n\n            if (data.mtime !== undefined) {\n\n                data.mtime = new RTMConfig.Int64(data.mtime);\n            }\n\n            callback && callback(null, { mid: payload.mid, payload: data });\n        }, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (5)\n     * \n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {Error} err\n     * @param {object<p2p:object<string, number>, group:object<string, number>>} data\n     */\n    getUnreadMessage(timeout, callback) {\n\n        let payload = {};\n\n        let options = {\n            flag: 1,\n            method: 'getunreadmsg',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, callback, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (6)\n     * \n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {Error} err\n     * @param {object} data\n     */\n    cleanUnreadMessage(timeout, callback) {\n\n        let payload = {};\n\n        let options = {\n            flag: 1,\n            method: 'cleanunreadmsg',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, callback, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (7)\n     * \n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {Error} err\n     * @param {object<p2p:object<string, Int64>, group:object<string, Int64>>} data\n     */\n    getSession(timeout, callback) {\n\n        let payload = {};\n\n        let options = {\n            flag: 1,\n            method: 'getsession',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, function(err, data) {\n            \n            if (err) {\n\n                callback && callback(err, null);\n                return;\n            }\n\n            let p2p = data['p2p'];\n\n            for (let key in p2p) {\n\n                p2p[key] = new RTMConfig.Int64(p2p[key]);\n            }\n\n            let group = data['group'];\n\n            for (let key in group) {\n\n                group[key] = new RTMConfig.Int64(group[key]);\n            }\n\n            callback && callback(null, data);\n        }, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (8)\n     * \n     * @param {Int64} gid \n     * @param {bool} desc \n     * @param {number} num\n     * @param {Int64} begin\n     * @param {Int64} end\n     * @param {Int64} lastid\n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {Error} err\n     * @param {object<num:number, lastid:Int64, begin:Int64, end:Int64, msgs:array<GroupMsg>>} data \n     * \n     * <GroupMsg>\n     * @param {Int64} GroupMsg.id\n     * @param {Int64} GroupMsg.from\n     * @param {number} GroupMsg.mtype\n     * @param {Int64} GroupMsg.mid\n     * @param {bool} GroupMsg.deleted\n     * @param {string} GroupMsg.msg\n     * @param {string} GroupMsg.attrs\n     * @param {Int64} GroupMsg.mtime\n     */\n    getGroupMessage(gid, desc, num, begin, end, lastid, timeout, callback) {\n        \n        let payload = {\n            gid: gid,\n            desc: desc,\n            num: num\n        };\n\n        if (begin !== undefined) {\n\n            payload.begin = begin;\n        }\n\n        if (end !== undefined) {\n\n            payload.end = end;\n        }\n\n        if (lastid !== undefined) {\n\n            payload.lastid = lastid;\n        }\n\n        let options = {\n            flag: 1,\n            method: 'getgroupmsg',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, function(err, data) {\n\n            if (err) {\n\n                callback && callback(err, null);\n                return;\n            }\n\n            let msgs = data['msgs'];\n\n            if (msgs) {\n\n                msgs.forEach(function(item, index) {\n\n                    msgs[index] = {\n                        id: new RTMConfig.Int64(item[0]),\n                        from: new RTMConfig.Int64(item[1]),\n                        mtype: Number(item[2]),\n                        mid: new RTMConfig.Int64(item[3]),\n                        deleted: item[4],\n                        msg: item[5],\n                        attrs: item[6],\n                        mtime: new RTMConfig.Int64(item[7])\n                    };\n                });\n            }\n\n            callback && callback(null, data);\n        }, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (9)\n     * \n     * @param {Int64} rid \n     * @param {bool} desc \n     * @param {number} num\n     * @param {Int64} begin\n     * @param {Int64} end\n     * @param {Int64} lastid\n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {Error} err\n     * @param {object<num:number, lastid:Int64, begin:Int64, end:Int64, msgs:array<RoomMsg>>} data \n     * \n     * <RoomMsg>\n     * @param {Int64} RoomMsg.id\n     * @param {Int64} RoomMsg.from\n     * @param {number} RoomMsg.mtype\n     * @param {Int64} RoomMsg.mid\n     * @param {bool} RoomMsg.deleted\n     * @param {string} RoomMsg.msg\n     * @param {string} RoomMsg.attrs\n     * @param {Int64} RoomMsg.mtime\n     */\n    getRoomMessage(rid, desc, num, begin, end, lastid, timeout, callback) {\n\n        let payload = {\n            rid: rid,\n            desc: desc,\n            num: num\n        };\n\n        if (begin !== undefined) {\n\n            payload.begin = begin;\n        }\n\n        if (end !== undefined) {\n\n            payload.end = end;\n        }\n\n        if (lastid !== undefined) {\n\n            payload.lastid = lastid;\n        }\n\n        let options = {\n            flag: 1,\n            method: 'getroommsg',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, function(err, data) {\n\n            if (err) {\n\n                callback && callback(err, null);\n                return;\n            }\n\n            let msgs = data['msgs'];\n\n            if (msgs) {\n\n                msgs.forEach(function(item, index) {\n\n                    msgs[index] = {\n                        id: new RTMConfig.Int64(item[0]),\n                        from: new RTMConfig.Int64(item[1]),\n                        mtype: Number(item[2]),\n                        mid: new RTMConfig.Int64(item[3]),\n                        deleted: item[4],\n                        msg: item[5],\n                        attrs: item[6],\n                        mtime: new RTMConfig.Int64(item[7])\n                    };\n                });\n            }\n\n            callback && callback(null, data);\n        }, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (10)\n     * \n     * @param {bool} desc \n     * @param {number} num\n     * @param {Int64} begin\n     * @param {Int64} end\n     * @param {Int64} lastid\n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {Error} err\n     * @param {object<num:number, lastid:Int64, begin:Int64, end:Int64, msgs:array<BroadcastMsg>>} data \n     * \n     * <BroadcastMsg>\n     * @param {Int64} BroadcastMsg.id\n     * @param {Int64} BroadcastMsg.from\n     * @param {number} BroadcastMsg.mtype\n     * @param {Int64} BroadcastMsg.mid\n     * @param {bool} BroadcastMsg.deleted\n     * @param {string} BroadcastMsg.msg\n     * @param {string} BroadcastMsg.attrs\n     * @param {Int64} BroadcastMsg.mtime\n     */\n    getBroadcastMessage(desc, num, begin, end, lastid, timeout, callback) {\n\n        let payload = {\n            desc: desc,\n            num: num\n        };\n\n        if (begin !== undefined) {\n\n            payload.begin = begin;\n        }\n\n        if (end !== undefined) {\n\n            payload.end = end;\n        }\n\n        if (lastid !== undefined) {\n\n            payload.lastid = lastid;\n        }\n\n        let options = {\n            flag: 1,\n            method: 'getbroadcastmsg',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, function(err, data) {\n\n            if (err) {\n\n                callback && callback(err, null);\n                return;\n            }\n\n            let msgs = data['msgs'];\n\n            if (msgs) {\n\n                msgs.forEach(function(item, index) {\n\n                    msgs[index] = {\n                        id: new RTMConfig.Int64(item[0]),\n                        from: new RTMConfig.Int64(item[1]),\n                        mtype: Number(item[2]),\n                        mid: new RTMConfig.Int64(item[3]),\n                        deleted: item[4],\n                        msg: item[5],\n                        attrs: item[6],\n                        mtime: new RTMConfig.Int64(item[7])\n                    };\n                });\n            }\n\n            callback && callback(null, data);\n        }, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (11)\n     * \n     * @param {Int64} ouid \n     * @param {bool} desc\n     * @param {number} num \n     * @param {Int64} begin \n     * @param {Int64} end\n     * @param {Int64} lastid\n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {Error} err\n     * @param {object<num:number, lastid:Int64, begin:Int64, end:Int64, msgs:array<P2PMsg>>} data \n     * \n     * <P2PMsg>\n     * @param {Int64} P2PMsg.id\n     * @param {number} P2PMsg.direction\n     * @param {number} P2PMsg.mtype\n     * @param {Int64} P2PMsg.mid\n     * @param {bool} P2PMsg.deleted\n     * @param {string} P2PMsg.msg\n     * @param {string} P2PMsg.attrs\n     * @param {Int64} P2PMsg.mtime\n     */\n    getP2PMessage(ouid, desc, num, begin, end, lastid, timeout, callback) {\n\n        let payload = {\n            ouid: ouid,\n            desc: desc,\n            num: num\n        };\n\n        if (begin !== undefined) {\n\n            payload.begin = begin;\n        }\n\n        if (end !== undefined) {\n\n            payload.end = end;\n        }\n\n        if (lastid !== undefined) {\n\n            payload.lastid = lastid;\n        }\n\n        let options = {\n            flag: 1,\n            method: 'getp2pmsg',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, function(err, data) {\n\n            if (err) {\n\n                callback && callback(err, null);\n                return;\n            }\n\n            let msgs = data['msgs'];\n\n            if (msgs) {\n\n                msgs.forEach(function(item, index) {\n\n                    msgs[index] = {\n                        id: new RTMConfig.Int64(item[0]),\n                        direction: Number(item[1]),\n                        mtype: Number(item[2]),\n                        mid: new RTMConfig.Int64(item[3]),\n                        deleted: item[4],\n                        msg: item[5],\n                        attrs: item[6],\n                        mtime: new RTMConfig.Int64(item[7])\n                    };\n                });\n            }\n\n            callback && callback(null, data);\n        }, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (12)\n     * \n     * @param {string} cmd \n     * @param {array<Int64>} tos\n     * @param {Int64} to \n     * @param {Int64} rid \n     * @param {Int64} gid\n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {Error} err\n     * @param {object<token:string, endpoint:string>} data \n     */\n    fileToken(cmd, tos, to, rid, gid, timeout, callback) {\n\n        let options = {\n            cmd: cmd\n        }\n\n        if (tos !== undefined) {\n\n            options.tos = tos;\n        }\n\n        if (to !== undefined) {\n\n            options.to = to;\n        }\n\n        if (rid !== undefined) {\n\n            options.rid = rid;\n        }\n\n        if (gid !== undefined) {\n\n            options.gid = gid;\n        }\n\n        filetoken.call(this, options, callback, timeout); \n    }\n\n    /**\n     *  \n     * rtmGate (13)\n     * \n     */\n    close() {\n\n        let payload = {};\n\n        let options = {\n            flag: 1,\n            method: 'bye',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        let self = this;\n        this._isClose = true;\n\n        sendQuest.call(this, this._baseClient, options, function(err, data) {\n\n            if (self._baseClient) {\n\n                self._baseClient.close();\n            }\n        });\n    }\n\n    /**\n     *  \n     * rtmGate (14)\n     * \n     * @param {object<string, string>} attrs\n     * @param {number} timeout\n     * @param {function} callback\n     * \n     * @callback\n     * @param {Error} err\n     * @param {object} data\n     */\n    addAttrs(attrs, timeout, callback) {\n\n        let payload = {\n            attrs: attrs\n        };\n\n        let options = {\n            flag: 1,\n            method: 'addattrs',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, callback, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (15)\n     * \n     * @param {number} timeout\n     * @param {function} callback\n     * \n     * @callback\n     * @param {Error} err\n     * @param {object<attrs:array<Map>>} data\n     *  \n     * <Map>\n     * @param {string} Map.ce\n     * @param {string} Map.login\n     * @param {string} Map.my\n     */\n    getAttrs(timeout, callback) {\n\n        let payload = {};\n\n        let options = {\n            flag: 1,\n            method: 'getattrs',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, callback, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (16)\n     * \n     * @param {string} msg\n     * @param {string} attrs\n     * @param {number} timeout\n     * @param {function} callback\n     * \n     * @callback\n     * @param {Error} err\n     * @param {object} data\n     */\n    addDebugLog(msg, attrs, timeout, callback) {\n\n        let payload = {\n            msg: msg,\n            attrs: attrs\n        };\n\n        let options = {\n            flag: 1,\n            method: 'adddebuglog',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, callback, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (17)\n     * \n     * @param {string} apptype \n     * @param {string} devicetoken \n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {Error} err\n     * @param {object} data \n     */\n    addDevice(apptype, devicetoken, timeout, callback) {\n\n        let payload = {\n            apptype: apptype,\n            devicetoken: devicetoken\n        };\n\n        let options = {\n            flag: 1,\n            method: 'adddevice',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, callback, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (18)\n     * \n     * @param {string} devicetoken \n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {Error} err\n     * @param {object} data \n     */\n    removeDevice(devicetoken, timeout, callback) {\n\n        let payload = {\n            devicetoken: devicetoken\n        };\n\n        let options = {\n            flag: 1,\n            method: 'removedevice',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, callback, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (19)\n     * \n     * @param {string} targetLanguage \n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {Error} err\n     * @param {object} data \n     */\n    setTranslationLanguage(targetLanguage, timeout, callback) {\n\n        let payload = {\n            lang: targetLanguage\n        };\n\n        let options = {\n            flag: 1,\n            method: 'setlang',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, callback, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (20)\n     * \n     * @param {string} originalMessage \n     * @param {string} originalLanguage \n     * @param {string} targetLanguage \n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {Error} err\n     * @param {object<stext:string, src:string, dtext:string, dst:string>} data \n     */\n    translate(originalMessage, originalLanguage, targetLanguage, timeout, callback) {\n\n        let payload = {\n            text: originalMessage,\n            dst: targetLanguage\n        };\n\n        if (originalLanguage !== undefined) {\n\n            payload.src = originalLanguage;\n        }\n\n        let options = {\n            flag: 1,\n            method: 'translate',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, callback, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (21)\n     * \n     * @param {array<Int64>} friends \n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {Error} err\n     * @param {object} data\n     */\n    addFriends(friends, timeout, callback) {\n\n        let payload = {\n            friends: friends\n        };\n\n        let options = {\n            flag: 1,\n            method: 'addfriends',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, callback, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (22)\n     * \n     * @param {array<Int64>} friends \n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {Error} err\n     * @param {object} data\n     */\n    deleteFriends(friends, timeout, callback) {\n\n        let payload = {\n            friends: friends\n        };\n\n        let options = {\n            flag: 1,\n            method: 'delfriends',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, callback, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (23)\n     * \n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {Error} err\n     * @param {array<Int64>} data\n     */\n    getFriends(timeout, callback) {\n\n        let payload = {};\n\n        let options = {\n            flag: 1,\n            method: 'getfriends',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, function(err, data) {\n\n            if (err) {\n\n                callback && callback(err, null);\n                return;\n            }\n\n            let uids = data['uids'];\n\n            if (uids) {\n\n                let buids = [];\n\n                uids.forEach(function(item, index) {\n\n                    buids[index] = new RTMConfig.Int64(item);\n                });\n\n                callback && callback(null, buids);\n                return;\n            }\n\n            callback && callback(null, data);\n        }, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (24)\n     * \n     * @param {Int64} gid \n     * @param {array<Int64>} uids \n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {Error} err\n     * @param {object} data\n     */\n    addGroupMembers(gid, uids, timeout, callback) {\n\n        let payload = {\n            gid: gid,\n            uids: uids\n        };\n\n        let options = {\n            flag: 1,\n            method: 'addgroupmembers',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n        \n        sendQuest.call(this, this._baseClient, options, callback, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (25)\n     * \n     * @param {Int64} gid \n     * @param {array<Int64>} uids \n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {Error} err\n     * @param {object} data\n     */\n    deleteGroupMembers(gid, uids, timeout, callback) {\n        \n        let payload = {\n            gid: gid,\n            uids: uids\n        };\n\n        let options = {\n            flag: 1,\n            method: 'delgroupmembers',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, callback, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (26)\n     * \n     * @param {Int64} gid \n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {Error} err\n     * @param {array<Int64>} data\n     */\n    getGroupMembers(gid, timeout, callback) {\n\n        let payload = {\n            gid: gid\n        };\n\n        let options = {\n            flag: 1,\n            method: 'getgroupmembers',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, function(err, data) {\n\n            if (err) {\n\n                callback && callback(err, null);\n                return;\n            }\n\n            let uids = data['uids'];\n\n            if (uids) {\n\n                let buids = [];\n                uids.forEach(function(item, index) {\n\n                    buids[index] = new RTMConfig.Int64(item);\n                });\n\n                callback && callback(null, buids);\n                return;\n            }\n\n            callback && callback(null, data);\n        }, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (27)\n     * \n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {Error} err\n     * @param {array<Int64>} data\n     */\n    getUserGroups(timeout, callback) {\n\n        let payload = {};\n\n        let options = {\n            flag: 1,\n            method: 'getusergroups',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, function(err, data) {\n\n            if (err) {\n\n                callback && callback(err, null);\n                return;\n            }\n\n            let gids = data['gids'];\n\n            if (gids) {\n\n                let bgids = [];\n\n                gids.forEach(function(item, index) {\n\n                    bgids[index] = new RTMConfig.Int64(item);\n                });\n\n                callback && callback(null, bgids);\n                return;\n            }\n\n            callback && callback(null, data);\n        }, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (28)\n     * \n     * @param {Int64} rid \n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {Error} err\n     * @param {object} data\n     */\n    enterRoom(rid, timeout, callback) {\n\n        let payload = {\n            rid: rid\n        };\n\n        let options = {\n            flag: 1,\n            method: 'enterroom',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, callback, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (29)\n     * \n     * @param {Int64} rid \n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {Error} err\n     * @param {object} data\n     */\n    leaveRoom(rid, timeout, callback) {\n\n        let payload = {\n            rid: rid\n        };\n\n        let options = {\n            flag: 1,\n            method: 'leaveroom',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, callback, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (30)\n     * \n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {Error} err\n     * @param {array<Int64>} data\n     */\n    getUserRooms(timeout, callback) {\n\n        let payload = {};\n\n        let options = {\n            flag: 1,\n            method: 'getuserrooms',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, function(err, data) {\n\n            if (err) {\n\n                callback && callback(err, null);\n                return;\n            }\n\n            let rids = data['rooms'];\n\n            if (rids) {\n\n                let brids = [];\n\n                rids.forEach(function(item, index) {\n                    \n                    brids[index] = new RTMConfig.Int64(item);\n                });\n\n                callback && callback(null, brids);\n                return;\n            }\n\n            callback && callback(null, data);\n        }, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (31)\n     * \n     * @param {array<Int64>} uids \n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {Error} err\n     * @param {array<Int64>} data\n     */\n    getOnlineUsers(uids, timeout, callback) {\n        \n        let payload = {\n            uids: uids\n        };\n\n        let options = {\n            flag: 1,\n            method: 'getonlineusers',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, function(err, data) {\n\n            if (err) {\n\n                callback && callback(err, null);\n                return;\n            }\n\n            let uids = data['uids'];\n\n            if (uids) {\n\n                let buids = [];\n\n                uids.forEach(function(item, index) {\n\n                    buids[index] = new RTMConfig.Int64(item);\n                });\n\n                callback && callback(null, buids);\n                return;\n            }\n\n            callback && callback(null, data);\n        }, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (32)\n     * \n     * @param {Int64} mid\n     * @param {Int64} xid\n     * @param {number} type\n     * @param {number} timeout\n     * @param {function} callback\n     * \n     * @callback\n     * @param {Error} err\n     * @param {object} data\n     */\n    deleteMessage(mid, xid, type, timeout, callback) {\n\n        let payload = {\n            mid: mid,\n            xid: xid,\n            type: type\n        };\n\n        let options = {\n            flag: 1,\n            method: 'delmsg',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, callback, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (33)\n     * \n     * @param {string} ce\n     * @param {number} timeout\n     * @param {function} callback\n     * \n     * @callback\n     * @param {Error} err\n     * @param {object} data\n     */\n    kickout(ce, timeout, callback) {\n\n        let payload = {\n            ce: ce\n        };\n\n        let options = {\n            flag: 1,\n            method: 'kickout',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, callback, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (34)\n     * \n     * @param {string} key\n     * @param {number} timeout\n     * @param {function} callback\n     * \n     * @callback\n     * @param {Error} err\n     * @param {object<val:string>} data\n     */\n    dbGet(key, timeout, callback) {\n\n        let payload = {\n            key: key && key.toString()\n        };\n\n        let options = {\n            flag: 1,\n            method: 'dbget',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, callback, timeout);\n    }\n\n    /**\n     *  \n     * rtmGate (35)\n     * \n     * @param {string} key\n     * @param {string} value \n     * @param {number} timeout\n     * @param {function} callback\n     * \n     * @callback\n     * @param {Error} err\n     * @param {object} data\n     */\n    dbSet(key, value, timeout, callback) {\n\n        let payload = {\n            key: key && key.toString(),\n            val: (value && value.toString()) || ''\n        };\n\n        let options = {\n            flag: 1,\n            method: 'dbset',\n            payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n        };\n\n        sendQuest.call(this, this._baseClient, options, callback, timeout);\n    }\n\n    /**\n     *  \n     * fileGate (1)\n     * \n     * @param {number} mtype \n     * @param {Int64} to \n     * @param {File} file\n     * @param {Int64} mid\n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {object<mid:Int64, error:Error>} err\n     * @param {object<mid:Int64, payload:object<mtime:Int64>>} data\n     */\n    sendFile(mtype, to, file, mid, timeout, callback) {\n\n        let ops = {\n            to: to,\n            mtype: mtype,\n            cmd: 'sendfile'\n        };\n\n        fileSendProcess.call(this, ops, file, mid, callback, timeout);\n    }\n\n    /**\n     *  \n     * fileGate (3)\n     * \n     * @param {number} mtype \n     * @param {Int64} gid \n     * @param {File} file\n     * @param {Int64} mid\n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {object<mid:Int64, error:Error>} err\n     * @param {object<mid:Int64, payload:object<mtime:Int64>>} data\n     */\n    sendGroupFile(mtype, gid, file, mid, timeout, callback) {\n\n        let ops = {\n            gid: gid,\n            mtype: mtype,\n            cmd: 'sendgroupfile'\n        };\n\n        fileSendProcess.call(this, ops, file, mid, callback, timeout);\n    }\n\n    /**\n     *  \n     * fileGate (4)\n     * \n     * @param {number} mtype \n     * @param {Int64} rid \n     * @param {File} file\n     * @param {Int64} mid\n     * @param {number} timeout \n     * @param {function} callback \n     * \n     * @callback\n     * @param {object<mid:Int64, error:Error>} err\n     * @param {object<mid:Int64, payload:object<mtime:Int64>>} data\n     */\n    sendRoomFile(mtype, rid, file, mid, timeout, callback) {\n\n        let ops = {\n            rid: rid,\n            mtype: mtype,\n            cmd: 'sendroomfile'\n        };\n\n        fileSendProcess.call(this, ops, file, mid, callback, timeout);\n    }\n\n    // Code for AsyncStressTester\n    /* \n    sendQuest(options, callback, timeout) {\n\n        sendQuest.call(this, this._baseClient, options, callback, timeout);\n    }\n\n    connect(endpoint, timeout) {\n\n        if (this._baseClient != null && this._baseClient.isOpen) {\n\n            this._baseClient.destroy();\n            return;\n        }\n\n        this._endpoint = endpoint;\n    \n        this._baseClient = new FPClient({ \n            endpoint: buildEndpoint.call(this, this._endpoint), \n            autoReconnect: false,\n            connectionTimeout: this._connectionTimeout,\n            proxy: this._proxy\n        });\n    \n        let self = this;\n    \n        this._baseClient.on('connect', function() {\n    \n            self.emit('connect');\n        });\n    \n        this._baseClient.on('close', function() {\n    \n            onClose.call(self);\n        });\n    \n        this._baseClient.on('error', function(err) {\n            \n            self.emit('error', err);\n        });\n    \n        this._baseClient.processor = this._processor;\n        this._baseClient.connect();\n    }\n    */\n}\n\nfunction fileSendProcess(ops, file, mid, callback, timeout) {\n\n    let self = this;\n\n    if (!mid || mid.toString() == '0') {\n\n        mid = genMid.call(this);\n    }\n\n    filetoken.call(self, ops, function(err, data) {\n\n        if (err) {\n\n            callback && callback({ mid: mid, error: err }, null);\n            return;\n        }\n\n        let token = data[\"token\"];\n        let endpoint = data[\"endpoint\"];\n\n        let ext = null;\n        let index = file.name.lastIndexOf('.');\n\n        if (index != -1) {\n\n            ext = file.name.slice(index + 1);\n        }\n\n        if (!token || !endpoint) {\n\n            callback && callback({ mid: mid, error: new Error(JSON.stringify(data)) }, null);\n            return;\n        }\n\n        let reader = new FileReader();\n\n        reader.onload = function(e) {\n\n            let content = Buffer.from(e.target.result);\n\n            if (!content) {\n\n                callback && callback({ mid: mid, error: new Error('no file content!') }, null);\n                return;\n            }\n\n            let sign = cyrMD5.call(self, cyrMD5.call(self, content) + ':' + token);\n\n            let fileClient = new FPClient({ \n\n                endpoint: buildEndpoint.call(self, endpoint),\n                autoReconnect: false,\n                connectionTimeout: timeout,\n                proxy: self._fileProxy \n            });\n\n            fileClient.on('close', function(){\n\n                self.destroy();\n            });\n\n            fileClient.on('error', function(err) {\n\n                self.emit('error', new Error('file client: ' + err.message));\n            });\n\n            fileClient.connect();\n\n            let options = {\n                token: token,\n                sign: sign,\n                ext: ext,\n                file: content\n            };\n\n            for (let key in ops) {\n\n                options[key] = ops[key];\n            }\n\n            sendfile.call(self, fileClient, options, mid, callback, timeout);\n        };\n        \n        reader.readAsArrayBuffer(file);\n    });\n}\n\nfunction filetoken(ops, callback, timeout) {\n\n    let payload = {};\n\n    for (let key in ops) {\n\n        if (key == 'mtype') {\n\n            continue;\n        }\n\n        payload[key] = ops[key];\n    }\n\n    let options = {\n        flag: 1,\n        method: 'filetoken',\n        payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n    };\n\n    sendQuest.call(this, this._baseClient, options, callback, timeout);\n}\n\nfunction sendfile(fileClient, ops, mid, callback, timeout) {\n\n    let payload = {\n        pid: this._pid,\n        from: this._uid,\n        mid: mid\n    };\n\n    for (let key in ops) {\n\n        if (key == 'sign') {\n\n            payload.attrs = JSON.stringify({ sign: ops.sign, ext: ops.ext });\n            continue;\n        }\n\n        if (key == 'ext') {\n\n            continue;\n        }\n\n        if (key == 'cmd') {\n\n            continue;\n        }\n\n        payload[key] = ops[key];\n    }\n\n    let options = {\n        flag: 1,\n        method: ops.cmd,\n        payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n    };\n\n    sendQuest.call(this, fileClient, options, function(err, data){\n\n        fileClient.destroy();\n\n        if (err) {\n\n            callback && callback({ mid: payload.mid, error: err }, null);\n            return;\n        }\n\n        if (data.mtime !== undefined) {\n\n            data.mtime = new RTMConfig.Int64(data.mtime);\n        }\n\n        callback && callback(null, { mid: payload.mid, payload: data });\n    }, timeout);\n}\n\nfunction genMid() {\n\n    if (++this._midSeq >= 999) {\n\n        this._midSeq = 0;\n    }\n\n    return new RTMConfig.Int64(Date.now().toString() + this._midSeq);\n}\n\nfunction cyrMD5(data) {\n\n    return require('../../libs/md5.min')(data);\n}\n\nfunction isException(isAnswerErr, data) {\n\n    if (!data) {\n\n        return new Error('data is null!');\n    }\n\n    if (data instanceof Error) {\n\n        return data;\n    }\n\n    if (isAnswerErr) {\n\n        if (data.hasOwnProperty('code') && data.hasOwnProperty('ex')) {\n\n            return new Error('code: ' + data.code + ', ex: ' + data.ex);\n        }\n    }\n\n    return null;\n}\n\nfunction sendQuest(client, options, callback, timeout) {\n\n    let self = this;\n\n    if (!client) {\n\n        callback && callback(new Error('client has been destroyed!'), null);\n        return;\n    }\n\n    client.sendQuest(options, function(data) {\n        \n        if (!callback) {\n\n            return;\n        }\n\n        let err = null;\n        let isAnswerErr = false;\n\n        if (data.payload) {\n\n            let payload = RTMConfig.MsgPack.decode(data.payload, self._msgOptions);\n\n            if (data.mtype == 2) {\n\n                isAnswerErr = data.ss != 0;\n            }\n\n            err = isException.call(self, isAnswerErr, payload);\n\n            if (err) {\n\n                callback && callback(err, null);\n                return;\n            }\n\n            callback && callback(null, payload);\n            return;\n        }\n\n        err = isException.call(self, isAnswerErr, data);\n\n        if (err) {\n\n            callback && callback(data, null);\n            return;\n        }\n\n        callback && callback(null, data);\n    }, timeout);\n}\n\nfunction getRTMGate(service, callback, timeout) {\n    \n\tlet self = this;\n\n    if (this._dispatchClient == null) {\n\n        this._dispatchClient = new FPClient({\n            endpoint: buildEndpoint.call(this, this._dispatch),\n            autoReconnect: false,\n            connectionTimeout: this._connectionTimeout,\n            proxy: this._proxy\n        });\n\n        this._dispatchClient.on('close', function() {\n\n            if (self._dispatchClient) {\n\n                self._dispatchClient.destroy();\n                self._dispatchClient = null;\n            }\n\n            if (!self._endpoint) {\n\n                callback && callback(new Error('dispatch client close with err'), null);\n            }\n        });\n    }\n\n    if (!this._dispatchClient.hasConnect) {\n\n        this._dispatchClient.connect();\n    }\n\n    which.call(this, service, callback, timeout);\n}\n\nfunction which(service, callback, timeout) {\n\n    let payload = {\n        pid: this._pid,\n        uid: this._uid,\n        what: service,\n        addrType: this._ipv6 ? 'ipv6' : 'ipv4',\n        version: this._version\n    };\n\n    let options = {\n        flag: 1,\n        method: 'which',\n        payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n    };\n\n    let self = this;\n\n    sendQuest.call(this, this._dispatchClient, options, function (err, data){\n\n        if (self._dispatchClient) {\n\n            self._dispatchClient.destroy();\n            self._dispatchClient = null;\n        }\n        \n        if (data) {\n            \n            callback && callback(null, data);\n        }\n\n        if (err) {\n\n            callback && callback(err, null);\n        }\n    }, timeout);\n}\n\nfunction buildEndpoint(endpoint) {\n    \n    if (this._proxy) {\n\n        return endpoint;\n    }\n\n    let protol = 'ws://';\n\n    if (this._ssl) {\n\n        protol = 'wss://';\n    }\n\n    return protol + endpoint + '/service/websocket';\n}\n\nfunction connectRTMGate(timeout) {\n\n    if (this._baseClient != null) {\n\n        this._baseClient.destroy();\n    }\n\n    this._baseClient = new FPClient({ \n        endpoint: buildEndpoint.call(this, this._endpoint), \n        autoReconnect: false,\n        connectionTimeout: this._connectionTimeout,\n        proxy: this._proxy\n    });\n\n    let self = this;\n\n    this._baseClient.on('close', function() {\n\n        onClose.call(self, true);\n    });\n\n    this._baseClient.on('error', function(err) {\n        \n        self.emit('error', err);\n    });\n\n    this._processor.on(RTMConfig.SERVER_PUSH.kickOut, function(data) {\n        \n        self._isClose = true;\n        self._baseClient.close();\n    });\n\n    this._baseClient.processor = this._processor;\n    this._baseClient.connect();\n\n    auth.call(this, timeout);\n}\n\n/**\n *  \n * rtmGate (1)\n *  \n */\nfunction auth(timeout) {\n\n    let payload = {\n        pid: this._pid,\n\t\tuid: this._uid,\n\t\ttoken: this._token\n    };\n\n    if (this._version) {\n\n        payload.version = this._version;\n    }\n\n    if (this._attrs) {\n\n        payload.attrs = this._attrs;\n    }\n\n    let options = {\n        flag: 1,\n        method: 'auth',\n        payload: RTMConfig.MsgPack.encode(payload, this._msgOptions)\n    };\n\n    let self = this;\n\n    sendQuest.call(this, this._baseClient, options, function(err, data) {\n\n        if (data && data.ok) {\n\n            if (self._reconnectTimeout) {\n\n                clearTimeout(self._reconnectTimeout);\n                self._reconnectTimeout = 0;\n            }\n\n            self.emit('login', { endpoint: self._endpoint });\n            return;\n        }\n\n        if (data && !data.ok) {\n\n            if (data.gate) {\n                \n                self._endpoint = data.gate;\n                onClose.call(self, true);\n                return;\n            }\n\n            self.emit('error', new Error('token error!'));\n            self.emit('login', { error: data });\n        }\n\n        if (err) {\n\n            self._baseClient.close(err);\n        }\n    }, timeout);\n}\n\nfunction onClose(reconnect) {\n\n    if (this._reconnectTimeout) {\n\n        clearTimeout(this._reconnectTimeout);\n        this._reconnectTimeout = 0;\n    }\n\n    if (reconnect) {\n\n        reConnect.call(this);\n        return;\n    }\n\n    this.emit('close', !this._isClose && this._autoReconnect);\n}\n\nfunction reConnect() {\n\n    if (!this._autoReconnect) {\n\n        return;\n    }\n\n    if (this._reconnectTimeout) {\n\n        return;\n    }\n\n    if (this._isClose) {\n\n        return;\n    }\n\n    let self = this;\n\n    this._reconnectTimeout = setTimeout(function() {\n\n        self.login(self._endpoint, self._ipv6);\n    }, 100);\n}\n\nmodule.exports = { RTMClient, RTMConfig };\n"],"sourceRoot":""}